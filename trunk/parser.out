Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    CREATE
    VIEW

Grammar

Rule 0     S' -> statement
Rule 1     script -> statement statement
Rule 2     script -> statement
Rule 3     statement -> create_view
Rule 4     statement -> create_table
Rule 5     statement -> select
Rule 6     create_table -> CREATE_TABLE expr_identifier expr_parent
Rule 7     create_view -> CREATE_VIEW expr_as
Rule 8     select -> select clause
Rule 9     select -> clause
Rule 10    analytic_function -> analytic_function clause
Rule 11    analytic_function -> clause_partition_by
Rule 12    clause_partition_by -> PARTITION_BY expr
Rule 13    clause -> clause_with
Rule 14    clause -> clause_select
Rule 15    clause -> clause_from
Rule 16    clause -> clause_join
Rule 17    clause -> clause_where
Rule 18    clause -> clause_group_by
Rule 19    clause -> clause_having
Rule 20    clause -> clause_order_by
Rule 21    clause_with -> WITH expr_comma
Rule 22    clause_select -> SELECT expr_select_modifier expr_comma
Rule 23    clause_from -> FROM expr_comma
Rule 24    clause_join -> JOIN_OPERATOR expr ON expr
Rule 25    clause_join -> JOIN_OPERATOR expr USING expr_parent
Rule 26    clause_where -> WHERE expr
Rule 27    clause_group_by -> GROUP_BY expr_comma
Rule 28    clause_having -> HAVING expr
Rule 29    clause_order_by -> ORDER_BY expr_comma
Rule 30    expr_select_modifier -> empty
Rule 31    expr_select_modifier -> DISTINCT
Rule 32    expr_select_modifier -> UNIQUE
Rule 33    expr_select_modifier -> ALL
Rule 34    expr_alias -> expr expr_identifier
Rule 35    expr_alias -> expr expr_function
Rule 36    expr_as -> expr AS expr
Rule 37    expr_as -> expr AS expr_identifier
Rule 38    expr_case -> CASE expr_conditions END
Rule 39    expr_conditions -> expr_conditions WHEN expr
Rule 40    expr_conditions -> expr_conditions THEN expr
Rule 41    expr_conditions -> expr_conditions ELSE expr
Rule 42    expr_conditions -> WHEN expr
Rule 43    expr_conditions -> THEN expr
Rule 44    expr_conditions -> ELSE expr
Rule 45    expr_function -> expr_identifier expr_parent
Rule 46    expr_function -> CAST expr_parent
Rule 47    expr_parent -> PARENT_L expr_comma PARENT_R
Rule 48    expr_parent -> PARENT_L empty PARENT_R
Rule 49    expr_comma -> expr_comma COMMA expr
Rule 50    expr_comma -> expr
Rule 51    expr_binary -> expr OPERATOR expr
Rule 52    expr_binary -> expr PLUS_MINUS expr
Rule 53    expr_binary -> expr SET_OPERATOR expr
Rule 54    expr_binary -> expr AND expr
Rule 55    expr_binary -> expr OR expr
Rule 56    expr_binary -> expr STAR expr
Rule 57    expr_between -> expr BETWEEN expr
Rule 58    expr_order -> expr ASC
Rule 59    expr_order -> expr DESC
Rule 60    expr_plus_minus -> PLUS_MINUS expr
Rule 61    expr_not -> NOT expr
Rule 62    expr_identifier -> expr_identifier DOT IDENTIFIER
Rule 63    expr_identifier -> expr_identifier DOT STAR
Rule 64    expr_identifier -> IDENTIFIER
Rule 65    expr_identifier -> STAR
Rule 66    expr -> select
Rule 67    expr -> expr_case
Rule 68    expr -> expr_function
Rule 69    expr -> expr_parent
Rule 70    expr -> expr_binary
Rule 71    expr -> expr_alias
Rule 72    expr -> expr_as
Rule 73    expr -> expr_order
Rule 74    expr -> expr_plus_minus
Rule 75    expr -> expr_not
Rule 76    expr -> expr_between
Rule 77    expr -> expr_identifier
Rule 78    expr -> term_literal
Rule 79    expr -> analytic_function
Rule 80    term_literal -> NUMBER
Rule 81    term_literal -> STRING
Rule 82    term_literal -> NULL
Rule 83    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 33
AND                  : 54
AS                   : 36 37
ASC                  : 58
BETWEEN              : 57
CASE                 : 38
CAST                 : 46
COMMA                : 49
CREATE               : 
CREATE_TABLE         : 6
CREATE_VIEW          : 7
DESC                 : 59
DISTINCT             : 31
DOT                  : 62 63
ELSE                 : 41 44
END                  : 38
FROM                 : 23
GROUP_BY             : 27
HAVING               : 28
IDENTIFIER           : 62 64
JOIN_OPERATOR        : 24 25
NOT                  : 61
NULL                 : 82
NUMBER               : 80
ON                   : 24
OPERATOR             : 51
OR                   : 55
ORDER_BY             : 29
PARENT_L             : 47 48
PARENT_R             : 47 48
PARTITION_BY         : 12
PLUS_MINUS           : 52 60
SELECT               : 22
SET_OPERATOR         : 53
STAR                 : 56 63 65
STRING               : 81
THEN                 : 40 43
UNIQUE               : 32
USING                : 25
VIEW                 : 
WHEN                 : 39 42
WHERE                : 26
WITH                 : 21
error                : 

Nonterminals, with rules where they appear

analytic_function    : 10 79
clause               : 8 9 10
clause_from          : 15
clause_group_by      : 18
clause_having        : 19
clause_join          : 16
clause_order_by      : 20
clause_partition_by  : 11
clause_select        : 14
clause_where         : 17
clause_with          : 13
create_table         : 4
create_view          : 3
empty                : 30 48
expr                 : 12 24 24 25 26 28 34 35 36 36 37 39 40 41 42 43 44 49 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 59 60 61
expr_alias           : 71
expr_as              : 7 72
expr_between         : 76
expr_binary          : 70
expr_case            : 67
expr_comma           : 21 22 23 27 29 47 49
expr_conditions      : 38 39 40 41
expr_function        : 35 68
expr_identifier      : 6 34 37 45 62 63 77
expr_not             : 75
expr_order           : 73
expr_parent          : 6 25 45 46 69
expr_plus_minus      : 74
expr_select_modifier : 22
script               : 
select               : 5 8 66
statement            : 1 1 2 0
term_literal         : 78

Parsing method: LALR

state 0

    (0) S' -> . statement
    (3) statement -> . create_view
    (4) statement -> . create_table
    (5) statement -> . select
    (7) create_view -> . CREATE_VIEW expr_as
    (6) create_table -> . CREATE_TABLE expr_identifier expr_parent
    (8) select -> . select clause
    (9) select -> . clause
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CREATE_VIEW     shift and go to state 11
    CREATE_TABLE    shift and go to state 23
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_having                  shift and go to state 15
    clause_group_by                shift and go to state 16
    clause_join                    shift and go to state 3
    clause                         shift and go to state 1
    clause_from                    shift and go to state 14
    clause_where                   shift and go to state 5
    create_table                   shift and go to state 12
    statement                      shift and go to state 13
    clause_select                  shift and go to state 17
    create_view                    shift and go to state 20
    clause_with                    shift and go to state 18
    select                         shift and go to state 4
    clause_order_by                shift and go to state 6

state 1

    (9) select -> clause .

    WITH            reduce using rule 9 (select -> clause .)
    SELECT          reduce using rule 9 (select -> clause .)
    FROM            reduce using rule 9 (select -> clause .)
    JOIN_OPERATOR   reduce using rule 9 (select -> clause .)
    WHERE           reduce using rule 9 (select -> clause .)
    GROUP_BY        reduce using rule 9 (select -> clause .)
    HAVING          reduce using rule 9 (select -> clause .)
    ORDER_BY        reduce using rule 9 (select -> clause .)
    OPERATOR        reduce using rule 9 (select -> clause .)
    PLUS_MINUS      reduce using rule 9 (select -> clause .)
    SET_OPERATOR    reduce using rule 9 (select -> clause .)
    AND             reduce using rule 9 (select -> clause .)
    OR              reduce using rule 9 (select -> clause .)
    STAR            reduce using rule 9 (select -> clause .)
    AS              reduce using rule 9 (select -> clause .)
    ASC             reduce using rule 9 (select -> clause .)
    DESC            reduce using rule 9 (select -> clause .)
    BETWEEN         reduce using rule 9 (select -> clause .)
    IDENTIFIER      reduce using rule 9 (select -> clause .)
    CAST            reduce using rule 9 (select -> clause .)
    END             reduce using rule 9 (select -> clause .)
    WHEN            reduce using rule 9 (select -> clause .)
    THEN            reduce using rule 9 (select -> clause .)
    ELSE            reduce using rule 9 (select -> clause .)
    COMMA           reduce using rule 9 (select -> clause .)
    $end            reduce using rule 9 (select -> clause .)
    ON              reduce using rule 9 (select -> clause .)
    USING           reduce using rule 9 (select -> clause .)
    PARENT_R        reduce using rule 9 (select -> clause .)


state 2

    (24) clause_join -> JOIN_OPERATOR . expr ON expr
    (25) clause_join -> JOIN_OPERATOR . expr USING expr_parent
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 47
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 3

    (16) clause -> clause_join .

    COMMA           reduce using rule 16 (clause -> clause_join .)
    WITH            reduce using rule 16 (clause -> clause_join .)
    SELECT          reduce using rule 16 (clause -> clause_join .)
    FROM            reduce using rule 16 (clause -> clause_join .)
    JOIN_OPERATOR   reduce using rule 16 (clause -> clause_join .)
    WHERE           reduce using rule 16 (clause -> clause_join .)
    GROUP_BY        reduce using rule 16 (clause -> clause_join .)
    HAVING          reduce using rule 16 (clause -> clause_join .)
    ORDER_BY        reduce using rule 16 (clause -> clause_join .)
    $end            reduce using rule 16 (clause -> clause_join .)
    ON              reduce using rule 16 (clause -> clause_join .)
    USING           reduce using rule 16 (clause -> clause_join .)
    OPERATOR        reduce using rule 16 (clause -> clause_join .)
    PLUS_MINUS      reduce using rule 16 (clause -> clause_join .)
    SET_OPERATOR    reduce using rule 16 (clause -> clause_join .)
    AND             reduce using rule 16 (clause -> clause_join .)
    OR              reduce using rule 16 (clause -> clause_join .)
    STAR            reduce using rule 16 (clause -> clause_join .)
    AS              reduce using rule 16 (clause -> clause_join .)
    ASC             reduce using rule 16 (clause -> clause_join .)
    DESC            reduce using rule 16 (clause -> clause_join .)
    BETWEEN         reduce using rule 16 (clause -> clause_join .)
    IDENTIFIER      reduce using rule 16 (clause -> clause_join .)
    CAST            reduce using rule 16 (clause -> clause_join .)
    PARENT_R        reduce using rule 16 (clause -> clause_join .)
    END             reduce using rule 16 (clause -> clause_join .)
    WHEN            reduce using rule 16 (clause -> clause_join .)
    THEN            reduce using rule 16 (clause -> clause_join .)
    ELSE            reduce using rule 16 (clause -> clause_join .)


state 4

    (5) statement -> select .
    (8) select -> select . clause
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    $end            reduce using rule 5 (statement -> select .)
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_having                  shift and go to state 15
    clause                         shift and go to state 51
    clause_join                    shift and go to state 3
    clause_with                    shift and go to state 18
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    clause_group_by                shift and go to state 16
    clause_select                  shift and go to state 17
    clause_from                    shift and go to state 14

state 5

    (17) clause -> clause_where .

    COMMA           reduce using rule 17 (clause -> clause_where .)
    WITH            reduce using rule 17 (clause -> clause_where .)
    SELECT          reduce using rule 17 (clause -> clause_where .)
    FROM            reduce using rule 17 (clause -> clause_where .)
    JOIN_OPERATOR   reduce using rule 17 (clause -> clause_where .)
    WHERE           reduce using rule 17 (clause -> clause_where .)
    GROUP_BY        reduce using rule 17 (clause -> clause_where .)
    HAVING          reduce using rule 17 (clause -> clause_where .)
    ORDER_BY        reduce using rule 17 (clause -> clause_where .)
    $end            reduce using rule 17 (clause -> clause_where .)
    ON              reduce using rule 17 (clause -> clause_where .)
    USING           reduce using rule 17 (clause -> clause_where .)
    OPERATOR        reduce using rule 17 (clause -> clause_where .)
    PLUS_MINUS      reduce using rule 17 (clause -> clause_where .)
    SET_OPERATOR    reduce using rule 17 (clause -> clause_where .)
    AND             reduce using rule 17 (clause -> clause_where .)
    OR              reduce using rule 17 (clause -> clause_where .)
    STAR            reduce using rule 17 (clause -> clause_where .)
    AS              reduce using rule 17 (clause -> clause_where .)
    ASC             reduce using rule 17 (clause -> clause_where .)
    DESC            reduce using rule 17 (clause -> clause_where .)
    BETWEEN         reduce using rule 17 (clause -> clause_where .)
    IDENTIFIER      reduce using rule 17 (clause -> clause_where .)
    CAST            reduce using rule 17 (clause -> clause_where .)
    PARENT_R        reduce using rule 17 (clause -> clause_where .)
    END             reduce using rule 17 (clause -> clause_where .)
    WHEN            reduce using rule 17 (clause -> clause_where .)
    THEN            reduce using rule 17 (clause -> clause_where .)
    ELSE            reduce using rule 17 (clause -> clause_where .)


state 6

    (20) clause -> clause_order_by .

    COMMA           reduce using rule 20 (clause -> clause_order_by .)
    WITH            reduce using rule 20 (clause -> clause_order_by .)
    SELECT          reduce using rule 20 (clause -> clause_order_by .)
    FROM            reduce using rule 20 (clause -> clause_order_by .)
    JOIN_OPERATOR   reduce using rule 20 (clause -> clause_order_by .)
    WHERE           reduce using rule 20 (clause -> clause_order_by .)
    GROUP_BY        reduce using rule 20 (clause -> clause_order_by .)
    HAVING          reduce using rule 20 (clause -> clause_order_by .)
    ORDER_BY        reduce using rule 20 (clause -> clause_order_by .)
    $end            reduce using rule 20 (clause -> clause_order_by .)
    ON              reduce using rule 20 (clause -> clause_order_by .)
    USING           reduce using rule 20 (clause -> clause_order_by .)
    OPERATOR        reduce using rule 20 (clause -> clause_order_by .)
    PLUS_MINUS      reduce using rule 20 (clause -> clause_order_by .)
    SET_OPERATOR    reduce using rule 20 (clause -> clause_order_by .)
    AND             reduce using rule 20 (clause -> clause_order_by .)
    OR              reduce using rule 20 (clause -> clause_order_by .)
    STAR            reduce using rule 20 (clause -> clause_order_by .)
    AS              reduce using rule 20 (clause -> clause_order_by .)
    ASC             reduce using rule 20 (clause -> clause_order_by .)
    DESC            reduce using rule 20 (clause -> clause_order_by .)
    BETWEEN         reduce using rule 20 (clause -> clause_order_by .)
    IDENTIFIER      reduce using rule 20 (clause -> clause_order_by .)
    CAST            reduce using rule 20 (clause -> clause_order_by .)
    PARENT_R        reduce using rule 20 (clause -> clause_order_by .)
    END             reduce using rule 20 (clause -> clause_order_by .)
    WHEN            reduce using rule 20 (clause -> clause_order_by .)
    THEN            reduce using rule 20 (clause -> clause_order_by .)
    ELSE            reduce using rule 20 (clause -> clause_order_by .)


state 7

    (29) clause_order_by -> ORDER_BY . expr_comma
    (49) expr_comma -> . expr_comma COMMA expr
    (50) expr_comma -> . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_comma                     shift and go to state 52
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 53
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 8

    (21) clause_with -> WITH . expr_comma
    (49) expr_comma -> . expr_comma COMMA expr
    (50) expr_comma -> . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_comma                     shift and go to state 54
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 53
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 9

    (22) clause_select -> SELECT . expr_select_modifier expr_comma
    (30) expr_select_modifier -> . empty
    (31) expr_select_modifier -> . DISTINCT
    (32) expr_select_modifier -> . UNIQUE
    (33) expr_select_modifier -> . ALL
    (83) empty -> .

    DISTINCT        shift and go to state 56
    UNIQUE          shift and go to state 57
    ALL             shift and go to state 55
    CASE            reduce using rule 83 (empty -> .)
    CAST            reduce using rule 83 (empty -> .)
    PARENT_L        reduce using rule 83 (empty -> .)
    PLUS_MINUS      reduce using rule 83 (empty -> .)
    NOT             reduce using rule 83 (empty -> .)
    IDENTIFIER      reduce using rule 83 (empty -> .)
    STAR            reduce using rule 83 (empty -> .)
    NUMBER          reduce using rule 83 (empty -> .)
    STRING          reduce using rule 83 (empty -> .)
    NULL            reduce using rule 83 (empty -> .)
    PARTITION_BY    reduce using rule 83 (empty -> .)
    WITH            reduce using rule 83 (empty -> .)
    SELECT          reduce using rule 83 (empty -> .)
    FROM            reduce using rule 83 (empty -> .)
    JOIN_OPERATOR   reduce using rule 83 (empty -> .)
    WHERE           reduce using rule 83 (empty -> .)
    GROUP_BY        reduce using rule 83 (empty -> .)
    HAVING          reduce using rule 83 (empty -> .)
    ORDER_BY        reduce using rule 83 (empty -> .)

    expr_select_modifier           shift and go to state 58
    empty                          shift and go to state 59

state 10

    (26) clause_where -> WHERE . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 60
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 11

    (7) create_view -> CREATE_VIEW . expr_as
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 61
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 62
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 12

    (4) statement -> create_table .

    $end            reduce using rule 4 (statement -> create_table .)


state 13

    (0) S' -> statement .



state 14

    (15) clause -> clause_from .

    COMMA           reduce using rule 15 (clause -> clause_from .)
    WITH            reduce using rule 15 (clause -> clause_from .)
    SELECT          reduce using rule 15 (clause -> clause_from .)
    FROM            reduce using rule 15 (clause -> clause_from .)
    JOIN_OPERATOR   reduce using rule 15 (clause -> clause_from .)
    WHERE           reduce using rule 15 (clause -> clause_from .)
    GROUP_BY        reduce using rule 15 (clause -> clause_from .)
    HAVING          reduce using rule 15 (clause -> clause_from .)
    ORDER_BY        reduce using rule 15 (clause -> clause_from .)
    $end            reduce using rule 15 (clause -> clause_from .)
    ON              reduce using rule 15 (clause -> clause_from .)
    USING           reduce using rule 15 (clause -> clause_from .)
    OPERATOR        reduce using rule 15 (clause -> clause_from .)
    PLUS_MINUS      reduce using rule 15 (clause -> clause_from .)
    SET_OPERATOR    reduce using rule 15 (clause -> clause_from .)
    AND             reduce using rule 15 (clause -> clause_from .)
    OR              reduce using rule 15 (clause -> clause_from .)
    STAR            reduce using rule 15 (clause -> clause_from .)
    AS              reduce using rule 15 (clause -> clause_from .)
    ASC             reduce using rule 15 (clause -> clause_from .)
    DESC            reduce using rule 15 (clause -> clause_from .)
    BETWEEN         reduce using rule 15 (clause -> clause_from .)
    IDENTIFIER      reduce using rule 15 (clause -> clause_from .)
    CAST            reduce using rule 15 (clause -> clause_from .)
    PARENT_R        reduce using rule 15 (clause -> clause_from .)
    END             reduce using rule 15 (clause -> clause_from .)
    WHEN            reduce using rule 15 (clause -> clause_from .)
    THEN            reduce using rule 15 (clause -> clause_from .)
    ELSE            reduce using rule 15 (clause -> clause_from .)


state 15

    (19) clause -> clause_having .

    COMMA           reduce using rule 19 (clause -> clause_having .)
    WITH            reduce using rule 19 (clause -> clause_having .)
    SELECT          reduce using rule 19 (clause -> clause_having .)
    FROM            reduce using rule 19 (clause -> clause_having .)
    JOIN_OPERATOR   reduce using rule 19 (clause -> clause_having .)
    WHERE           reduce using rule 19 (clause -> clause_having .)
    GROUP_BY        reduce using rule 19 (clause -> clause_having .)
    HAVING          reduce using rule 19 (clause -> clause_having .)
    ORDER_BY        reduce using rule 19 (clause -> clause_having .)
    $end            reduce using rule 19 (clause -> clause_having .)
    ON              reduce using rule 19 (clause -> clause_having .)
    USING           reduce using rule 19 (clause -> clause_having .)
    OPERATOR        reduce using rule 19 (clause -> clause_having .)
    PLUS_MINUS      reduce using rule 19 (clause -> clause_having .)
    SET_OPERATOR    reduce using rule 19 (clause -> clause_having .)
    AND             reduce using rule 19 (clause -> clause_having .)
    OR              reduce using rule 19 (clause -> clause_having .)
    STAR            reduce using rule 19 (clause -> clause_having .)
    AS              reduce using rule 19 (clause -> clause_having .)
    ASC             reduce using rule 19 (clause -> clause_having .)
    DESC            reduce using rule 19 (clause -> clause_having .)
    BETWEEN         reduce using rule 19 (clause -> clause_having .)
    IDENTIFIER      reduce using rule 19 (clause -> clause_having .)
    CAST            reduce using rule 19 (clause -> clause_having .)
    PARENT_R        reduce using rule 19 (clause -> clause_having .)
    END             reduce using rule 19 (clause -> clause_having .)
    WHEN            reduce using rule 19 (clause -> clause_having .)
    THEN            reduce using rule 19 (clause -> clause_having .)
    ELSE            reduce using rule 19 (clause -> clause_having .)


state 16

    (18) clause -> clause_group_by .

    COMMA           reduce using rule 18 (clause -> clause_group_by .)
    WITH            reduce using rule 18 (clause -> clause_group_by .)
    SELECT          reduce using rule 18 (clause -> clause_group_by .)
    FROM            reduce using rule 18 (clause -> clause_group_by .)
    JOIN_OPERATOR   reduce using rule 18 (clause -> clause_group_by .)
    WHERE           reduce using rule 18 (clause -> clause_group_by .)
    GROUP_BY        reduce using rule 18 (clause -> clause_group_by .)
    HAVING          reduce using rule 18 (clause -> clause_group_by .)
    ORDER_BY        reduce using rule 18 (clause -> clause_group_by .)
    $end            reduce using rule 18 (clause -> clause_group_by .)
    ON              reduce using rule 18 (clause -> clause_group_by .)
    USING           reduce using rule 18 (clause -> clause_group_by .)
    OPERATOR        reduce using rule 18 (clause -> clause_group_by .)
    PLUS_MINUS      reduce using rule 18 (clause -> clause_group_by .)
    SET_OPERATOR    reduce using rule 18 (clause -> clause_group_by .)
    AND             reduce using rule 18 (clause -> clause_group_by .)
    OR              reduce using rule 18 (clause -> clause_group_by .)
    STAR            reduce using rule 18 (clause -> clause_group_by .)
    AS              reduce using rule 18 (clause -> clause_group_by .)
    ASC             reduce using rule 18 (clause -> clause_group_by .)
    DESC            reduce using rule 18 (clause -> clause_group_by .)
    BETWEEN         reduce using rule 18 (clause -> clause_group_by .)
    IDENTIFIER      reduce using rule 18 (clause -> clause_group_by .)
    CAST            reduce using rule 18 (clause -> clause_group_by .)
    PARENT_R        reduce using rule 18 (clause -> clause_group_by .)
    END             reduce using rule 18 (clause -> clause_group_by .)
    WHEN            reduce using rule 18 (clause -> clause_group_by .)
    THEN            reduce using rule 18 (clause -> clause_group_by .)
    ELSE            reduce using rule 18 (clause -> clause_group_by .)


state 17

    (14) clause -> clause_select .

    COMMA           reduce using rule 14 (clause -> clause_select .)
    WITH            reduce using rule 14 (clause -> clause_select .)
    SELECT          reduce using rule 14 (clause -> clause_select .)
    FROM            reduce using rule 14 (clause -> clause_select .)
    JOIN_OPERATOR   reduce using rule 14 (clause -> clause_select .)
    WHERE           reduce using rule 14 (clause -> clause_select .)
    GROUP_BY        reduce using rule 14 (clause -> clause_select .)
    HAVING          reduce using rule 14 (clause -> clause_select .)
    ORDER_BY        reduce using rule 14 (clause -> clause_select .)
    $end            reduce using rule 14 (clause -> clause_select .)
    ON              reduce using rule 14 (clause -> clause_select .)
    USING           reduce using rule 14 (clause -> clause_select .)
    OPERATOR        reduce using rule 14 (clause -> clause_select .)
    PLUS_MINUS      reduce using rule 14 (clause -> clause_select .)
    SET_OPERATOR    reduce using rule 14 (clause -> clause_select .)
    AND             reduce using rule 14 (clause -> clause_select .)
    OR              reduce using rule 14 (clause -> clause_select .)
    STAR            reduce using rule 14 (clause -> clause_select .)
    AS              reduce using rule 14 (clause -> clause_select .)
    ASC             reduce using rule 14 (clause -> clause_select .)
    DESC            reduce using rule 14 (clause -> clause_select .)
    BETWEEN         reduce using rule 14 (clause -> clause_select .)
    IDENTIFIER      reduce using rule 14 (clause -> clause_select .)
    CAST            reduce using rule 14 (clause -> clause_select .)
    PARENT_R        reduce using rule 14 (clause -> clause_select .)
    END             reduce using rule 14 (clause -> clause_select .)
    WHEN            reduce using rule 14 (clause -> clause_select .)
    THEN            reduce using rule 14 (clause -> clause_select .)
    ELSE            reduce using rule 14 (clause -> clause_select .)


state 18

    (13) clause -> clause_with .

    COMMA           reduce using rule 13 (clause -> clause_with .)
    WITH            reduce using rule 13 (clause -> clause_with .)
    SELECT          reduce using rule 13 (clause -> clause_with .)
    FROM            reduce using rule 13 (clause -> clause_with .)
    JOIN_OPERATOR   reduce using rule 13 (clause -> clause_with .)
    WHERE           reduce using rule 13 (clause -> clause_with .)
    GROUP_BY        reduce using rule 13 (clause -> clause_with .)
    HAVING          reduce using rule 13 (clause -> clause_with .)
    ORDER_BY        reduce using rule 13 (clause -> clause_with .)
    $end            reduce using rule 13 (clause -> clause_with .)
    ON              reduce using rule 13 (clause -> clause_with .)
    USING           reduce using rule 13 (clause -> clause_with .)
    OPERATOR        reduce using rule 13 (clause -> clause_with .)
    PLUS_MINUS      reduce using rule 13 (clause -> clause_with .)
    SET_OPERATOR    reduce using rule 13 (clause -> clause_with .)
    AND             reduce using rule 13 (clause -> clause_with .)
    OR              reduce using rule 13 (clause -> clause_with .)
    STAR            reduce using rule 13 (clause -> clause_with .)
    AS              reduce using rule 13 (clause -> clause_with .)
    ASC             reduce using rule 13 (clause -> clause_with .)
    DESC            reduce using rule 13 (clause -> clause_with .)
    BETWEEN         reduce using rule 13 (clause -> clause_with .)
    IDENTIFIER      reduce using rule 13 (clause -> clause_with .)
    CAST            reduce using rule 13 (clause -> clause_with .)
    PARENT_R        reduce using rule 13 (clause -> clause_with .)
    END             reduce using rule 13 (clause -> clause_with .)
    WHEN            reduce using rule 13 (clause -> clause_with .)
    THEN            reduce using rule 13 (clause -> clause_with .)
    ELSE            reduce using rule 13 (clause -> clause_with .)


state 19

    (23) clause_from -> FROM . expr_comma
    (49) expr_comma -> . expr_comma COMMA expr
    (50) expr_comma -> . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_comma                     shift and go to state 63
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 53
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 20

    (3) statement -> create_view .

    $end            reduce using rule 3 (statement -> create_view .)


state 21

    (27) clause_group_by -> GROUP_BY . expr_comma
    (49) expr_comma -> . expr_comma COMMA expr
    (50) expr_comma -> . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_comma                     shift and go to state 64
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 53
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 22

    (28) clause_having -> HAVING . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 65
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 23

    (6) create_table -> CREATE_TABLE . expr_identifier expr_parent
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR

    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24

    expr_identifier                shift and go to state 66

state 24

    (65) expr_identifier -> STAR .

    DOT             reduce using rule 65 (expr_identifier -> STAR .)
    PARENT_L        reduce using rule 65 (expr_identifier -> STAR .)
    OPERATOR        reduce using rule 65 (expr_identifier -> STAR .)
    PLUS_MINUS      reduce using rule 65 (expr_identifier -> STAR .)
    SET_OPERATOR    reduce using rule 65 (expr_identifier -> STAR .)
    AND             reduce using rule 65 (expr_identifier -> STAR .)
    OR              reduce using rule 65 (expr_identifier -> STAR .)
    STAR            reduce using rule 65 (expr_identifier -> STAR .)
    AS              reduce using rule 65 (expr_identifier -> STAR .)
    ASC             reduce using rule 65 (expr_identifier -> STAR .)
    DESC            reduce using rule 65 (expr_identifier -> STAR .)
    BETWEEN         reduce using rule 65 (expr_identifier -> STAR .)
    IDENTIFIER      reduce using rule 65 (expr_identifier -> STAR .)
    CAST            reduce using rule 65 (expr_identifier -> STAR .)
    END             reduce using rule 65 (expr_identifier -> STAR .)
    WHEN            reduce using rule 65 (expr_identifier -> STAR .)
    THEN            reduce using rule 65 (expr_identifier -> STAR .)
    ELSE            reduce using rule 65 (expr_identifier -> STAR .)
    COMMA           reduce using rule 65 (expr_identifier -> STAR .)
    WITH            reduce using rule 65 (expr_identifier -> STAR .)
    SELECT          reduce using rule 65 (expr_identifier -> STAR .)
    FROM            reduce using rule 65 (expr_identifier -> STAR .)
    JOIN_OPERATOR   reduce using rule 65 (expr_identifier -> STAR .)
    WHERE           reduce using rule 65 (expr_identifier -> STAR .)
    GROUP_BY        reduce using rule 65 (expr_identifier -> STAR .)
    HAVING          reduce using rule 65 (expr_identifier -> STAR .)
    ORDER_BY        reduce using rule 65 (expr_identifier -> STAR .)
    $end            reduce using rule 65 (expr_identifier -> STAR .)
    ON              reduce using rule 65 (expr_identifier -> STAR .)
    USING           reduce using rule 65 (expr_identifier -> STAR .)
    PARENT_R        reduce using rule 65 (expr_identifier -> STAR .)


state 25

    (68) expr -> expr_function .

    COMMA           reduce using rule 68 (expr -> expr_function .)
    WITH            reduce using rule 68 (expr -> expr_function .)
    SELECT          reduce using rule 68 (expr -> expr_function .)
    FROM            reduce using rule 68 (expr -> expr_function .)
    JOIN_OPERATOR   reduce using rule 68 (expr -> expr_function .)
    WHERE           reduce using rule 68 (expr -> expr_function .)
    GROUP_BY        reduce using rule 68 (expr -> expr_function .)
    HAVING          reduce using rule 68 (expr -> expr_function .)
    ORDER_BY        reduce using rule 68 (expr -> expr_function .)
    $end            reduce using rule 68 (expr -> expr_function .)
    ON              reduce using rule 68 (expr -> expr_function .)
    USING           reduce using rule 68 (expr -> expr_function .)
    OPERATOR        reduce using rule 68 (expr -> expr_function .)
    PLUS_MINUS      reduce using rule 68 (expr -> expr_function .)
    SET_OPERATOR    reduce using rule 68 (expr -> expr_function .)
    AND             reduce using rule 68 (expr -> expr_function .)
    OR              reduce using rule 68 (expr -> expr_function .)
    STAR            reduce using rule 68 (expr -> expr_function .)
    AS              reduce using rule 68 (expr -> expr_function .)
    ASC             reduce using rule 68 (expr -> expr_function .)
    DESC            reduce using rule 68 (expr -> expr_function .)
    BETWEEN         reduce using rule 68 (expr -> expr_function .)
    IDENTIFIER      reduce using rule 68 (expr -> expr_function .)
    CAST            reduce using rule 68 (expr -> expr_function .)
    PARENT_R        reduce using rule 68 (expr -> expr_function .)
    END             reduce using rule 68 (expr -> expr_function .)
    WHEN            reduce using rule 68 (expr -> expr_function .)
    THEN            reduce using rule 68 (expr -> expr_function .)
    ELSE            reduce using rule 68 (expr -> expr_function .)


state 26

    (72) expr -> expr_as .

    COMMA           reduce using rule 72 (expr -> expr_as .)
    WITH            reduce using rule 72 (expr -> expr_as .)
    SELECT          reduce using rule 72 (expr -> expr_as .)
    FROM            reduce using rule 72 (expr -> expr_as .)
    JOIN_OPERATOR   reduce using rule 72 (expr -> expr_as .)
    WHERE           reduce using rule 72 (expr -> expr_as .)
    GROUP_BY        reduce using rule 72 (expr -> expr_as .)
    HAVING          reduce using rule 72 (expr -> expr_as .)
    ORDER_BY        reduce using rule 72 (expr -> expr_as .)
    $end            reduce using rule 72 (expr -> expr_as .)
    ON              reduce using rule 72 (expr -> expr_as .)
    USING           reduce using rule 72 (expr -> expr_as .)
    OPERATOR        reduce using rule 72 (expr -> expr_as .)
    PLUS_MINUS      reduce using rule 72 (expr -> expr_as .)
    SET_OPERATOR    reduce using rule 72 (expr -> expr_as .)
    AND             reduce using rule 72 (expr -> expr_as .)
    OR              reduce using rule 72 (expr -> expr_as .)
    STAR            reduce using rule 72 (expr -> expr_as .)
    AS              reduce using rule 72 (expr -> expr_as .)
    ASC             reduce using rule 72 (expr -> expr_as .)
    DESC            reduce using rule 72 (expr -> expr_as .)
    BETWEEN         reduce using rule 72 (expr -> expr_as .)
    IDENTIFIER      reduce using rule 72 (expr -> expr_as .)
    CAST            reduce using rule 72 (expr -> expr_as .)
    PARENT_R        reduce using rule 72 (expr -> expr_as .)
    END             reduce using rule 72 (expr -> expr_as .)
    WHEN            reduce using rule 72 (expr -> expr_as .)
    THEN            reduce using rule 72 (expr -> expr_as .)
    ELSE            reduce using rule 72 (expr -> expr_as .)


state 27

    (70) expr -> expr_binary .

    COMMA           reduce using rule 70 (expr -> expr_binary .)
    WITH            reduce using rule 70 (expr -> expr_binary .)
    SELECT          reduce using rule 70 (expr -> expr_binary .)
    FROM            reduce using rule 70 (expr -> expr_binary .)
    JOIN_OPERATOR   reduce using rule 70 (expr -> expr_binary .)
    WHERE           reduce using rule 70 (expr -> expr_binary .)
    GROUP_BY        reduce using rule 70 (expr -> expr_binary .)
    HAVING          reduce using rule 70 (expr -> expr_binary .)
    ORDER_BY        reduce using rule 70 (expr -> expr_binary .)
    $end            reduce using rule 70 (expr -> expr_binary .)
    ON              reduce using rule 70 (expr -> expr_binary .)
    USING           reduce using rule 70 (expr -> expr_binary .)
    OPERATOR        reduce using rule 70 (expr -> expr_binary .)
    PLUS_MINUS      reduce using rule 70 (expr -> expr_binary .)
    SET_OPERATOR    reduce using rule 70 (expr -> expr_binary .)
    AND             reduce using rule 70 (expr -> expr_binary .)
    OR              reduce using rule 70 (expr -> expr_binary .)
    STAR            reduce using rule 70 (expr -> expr_binary .)
    AS              reduce using rule 70 (expr -> expr_binary .)
    ASC             reduce using rule 70 (expr -> expr_binary .)
    DESC            reduce using rule 70 (expr -> expr_binary .)
    BETWEEN         reduce using rule 70 (expr -> expr_binary .)
    IDENTIFIER      reduce using rule 70 (expr -> expr_binary .)
    CAST            reduce using rule 70 (expr -> expr_binary .)
    PARENT_R        reduce using rule 70 (expr -> expr_binary .)
    END             reduce using rule 70 (expr -> expr_binary .)
    WHEN            reduce using rule 70 (expr -> expr_binary .)
    THEN            reduce using rule 70 (expr -> expr_binary .)
    ELSE            reduce using rule 70 (expr -> expr_binary .)


state 28

    (82) term_literal -> NULL .

    COMMA           reduce using rule 82 (term_literal -> NULL .)
    WITH            reduce using rule 82 (term_literal -> NULL .)
    SELECT          reduce using rule 82 (term_literal -> NULL .)
    FROM            reduce using rule 82 (term_literal -> NULL .)
    JOIN_OPERATOR   reduce using rule 82 (term_literal -> NULL .)
    WHERE           reduce using rule 82 (term_literal -> NULL .)
    GROUP_BY        reduce using rule 82 (term_literal -> NULL .)
    HAVING          reduce using rule 82 (term_literal -> NULL .)
    ORDER_BY        reduce using rule 82 (term_literal -> NULL .)
    $end            reduce using rule 82 (term_literal -> NULL .)
    ON              reduce using rule 82 (term_literal -> NULL .)
    USING           reduce using rule 82 (term_literal -> NULL .)
    OPERATOR        reduce using rule 82 (term_literal -> NULL .)
    PLUS_MINUS      reduce using rule 82 (term_literal -> NULL .)
    SET_OPERATOR    reduce using rule 82 (term_literal -> NULL .)
    AND             reduce using rule 82 (term_literal -> NULL .)
    OR              reduce using rule 82 (term_literal -> NULL .)
    STAR            reduce using rule 82 (term_literal -> NULL .)
    AS              reduce using rule 82 (term_literal -> NULL .)
    ASC             reduce using rule 82 (term_literal -> NULL .)
    DESC            reduce using rule 82 (term_literal -> NULL .)
    BETWEEN         reduce using rule 82 (term_literal -> NULL .)
    IDENTIFIER      reduce using rule 82 (term_literal -> NULL .)
    CAST            reduce using rule 82 (term_literal -> NULL .)
    PARENT_R        reduce using rule 82 (term_literal -> NULL .)
    END             reduce using rule 82 (term_literal -> NULL .)
    WHEN            reduce using rule 82 (term_literal -> NULL .)
    THEN            reduce using rule 82 (term_literal -> NULL .)
    ELSE            reduce using rule 82 (term_literal -> NULL .)


state 29

    (74) expr -> expr_plus_minus .

    COMMA           reduce using rule 74 (expr -> expr_plus_minus .)
    WITH            reduce using rule 74 (expr -> expr_plus_minus .)
    SELECT          reduce using rule 74 (expr -> expr_plus_minus .)
    FROM            reduce using rule 74 (expr -> expr_plus_minus .)
    JOIN_OPERATOR   reduce using rule 74 (expr -> expr_plus_minus .)
    WHERE           reduce using rule 74 (expr -> expr_plus_minus .)
    GROUP_BY        reduce using rule 74 (expr -> expr_plus_minus .)
    HAVING          reduce using rule 74 (expr -> expr_plus_minus .)
    ORDER_BY        reduce using rule 74 (expr -> expr_plus_minus .)
    $end            reduce using rule 74 (expr -> expr_plus_minus .)
    ON              reduce using rule 74 (expr -> expr_plus_minus .)
    USING           reduce using rule 74 (expr -> expr_plus_minus .)
    OPERATOR        reduce using rule 74 (expr -> expr_plus_minus .)
    PLUS_MINUS      reduce using rule 74 (expr -> expr_plus_minus .)
    SET_OPERATOR    reduce using rule 74 (expr -> expr_plus_minus .)
    AND             reduce using rule 74 (expr -> expr_plus_minus .)
    OR              reduce using rule 74 (expr -> expr_plus_minus .)
    STAR            reduce using rule 74 (expr -> expr_plus_minus .)
    AS              reduce using rule 74 (expr -> expr_plus_minus .)
    ASC             reduce using rule 74 (expr -> expr_plus_minus .)
    DESC            reduce using rule 74 (expr -> expr_plus_minus .)
    BETWEEN         reduce using rule 74 (expr -> expr_plus_minus .)
    IDENTIFIER      reduce using rule 74 (expr -> expr_plus_minus .)
    CAST            reduce using rule 74 (expr -> expr_plus_minus .)
    PARENT_R        reduce using rule 74 (expr -> expr_plus_minus .)
    END             reduce using rule 74 (expr -> expr_plus_minus .)
    WHEN            reduce using rule 74 (expr -> expr_plus_minus .)
    THEN            reduce using rule 74 (expr -> expr_plus_minus .)
    ELSE            reduce using rule 74 (expr -> expr_plus_minus .)


state 30

    (66) expr -> select .
    (8) select -> select . clause
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

  ! shift/reduce conflict for WITH resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for JOIN_OPERATOR resolved as shift
  ! shift/reduce conflict for WHERE resolved as shift
  ! shift/reduce conflict for GROUP_BY resolved as shift
  ! shift/reduce conflict for HAVING resolved as shift
  ! shift/reduce conflict for ORDER_BY resolved as shift
    COMMA           reduce using rule 66 (expr -> select .)
    $end            reduce using rule 66 (expr -> select .)
    ON              reduce using rule 66 (expr -> select .)
    USING           reduce using rule 66 (expr -> select .)
    OPERATOR        reduce using rule 66 (expr -> select .)
    PLUS_MINUS      reduce using rule 66 (expr -> select .)
    SET_OPERATOR    reduce using rule 66 (expr -> select .)
    AND             reduce using rule 66 (expr -> select .)
    OR              reduce using rule 66 (expr -> select .)
    STAR            reduce using rule 66 (expr -> select .)
    AS              reduce using rule 66 (expr -> select .)
    ASC             reduce using rule 66 (expr -> select .)
    DESC            reduce using rule 66 (expr -> select .)
    BETWEEN         reduce using rule 66 (expr -> select .)
    IDENTIFIER      reduce using rule 66 (expr -> select .)
    CAST            reduce using rule 66 (expr -> select .)
    PARENT_R        reduce using rule 66 (expr -> select .)
    END             reduce using rule 66 (expr -> select .)
    WHEN            reduce using rule 66 (expr -> select .)
    THEN            reduce using rule 66 (expr -> select .)
    ELSE            reduce using rule 66 (expr -> select .)
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

  ! WITH            [ reduce using rule 66 (expr -> select .) ]
  ! SELECT          [ reduce using rule 66 (expr -> select .) ]
  ! FROM            [ reduce using rule 66 (expr -> select .) ]
  ! JOIN_OPERATOR   [ reduce using rule 66 (expr -> select .) ]
  ! WHERE           [ reduce using rule 66 (expr -> select .) ]
  ! GROUP_BY        [ reduce using rule 66 (expr -> select .) ]
  ! HAVING          [ reduce using rule 66 (expr -> select .) ]
  ! ORDER_BY        [ reduce using rule 66 (expr -> select .) ]

    clause_having                  shift and go to state 15
    clause                         shift and go to state 51
    clause_join                    shift and go to state 3
    clause_with                    shift and go to state 18
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    clause_group_by                shift and go to state 16
    clause_select                  shift and go to state 17
    clause_from                    shift and go to state 14

state 31

    (38) expr_case -> CASE . expr_conditions END
    (39) expr_conditions -> . expr_conditions WHEN expr
    (40) expr_conditions -> . expr_conditions THEN expr
    (41) expr_conditions -> . expr_conditions ELSE expr
    (42) expr_conditions -> . WHEN expr
    (43) expr_conditions -> . THEN expr
    (44) expr_conditions -> . ELSE expr

    WHEN            shift and go to state 69
    THEN            shift and go to state 68
    ELSE            shift and go to state 70

    expr_conditions                shift and go to state 67

state 32

    (69) expr -> expr_parent .

    COMMA           reduce using rule 69 (expr -> expr_parent .)
    WITH            reduce using rule 69 (expr -> expr_parent .)
    SELECT          reduce using rule 69 (expr -> expr_parent .)
    FROM            reduce using rule 69 (expr -> expr_parent .)
    JOIN_OPERATOR   reduce using rule 69 (expr -> expr_parent .)
    WHERE           reduce using rule 69 (expr -> expr_parent .)
    GROUP_BY        reduce using rule 69 (expr -> expr_parent .)
    HAVING          reduce using rule 69 (expr -> expr_parent .)
    ORDER_BY        reduce using rule 69 (expr -> expr_parent .)
    $end            reduce using rule 69 (expr -> expr_parent .)
    ON              reduce using rule 69 (expr -> expr_parent .)
    USING           reduce using rule 69 (expr -> expr_parent .)
    OPERATOR        reduce using rule 69 (expr -> expr_parent .)
    PLUS_MINUS      reduce using rule 69 (expr -> expr_parent .)
    SET_OPERATOR    reduce using rule 69 (expr -> expr_parent .)
    AND             reduce using rule 69 (expr -> expr_parent .)
    OR              reduce using rule 69 (expr -> expr_parent .)
    STAR            reduce using rule 69 (expr -> expr_parent .)
    AS              reduce using rule 69 (expr -> expr_parent .)
    ASC             reduce using rule 69 (expr -> expr_parent .)
    DESC            reduce using rule 69 (expr -> expr_parent .)
    BETWEEN         reduce using rule 69 (expr -> expr_parent .)
    IDENTIFIER      reduce using rule 69 (expr -> expr_parent .)
    CAST            reduce using rule 69 (expr -> expr_parent .)
    PARENT_R        reduce using rule 69 (expr -> expr_parent .)
    END             reduce using rule 69 (expr -> expr_parent .)
    WHEN            reduce using rule 69 (expr -> expr_parent .)
    THEN            reduce using rule 69 (expr -> expr_parent .)
    ELSE            reduce using rule 69 (expr -> expr_parent .)


state 33

    (75) expr -> expr_not .

    COMMA           reduce using rule 75 (expr -> expr_not .)
    WITH            reduce using rule 75 (expr -> expr_not .)
    SELECT          reduce using rule 75 (expr -> expr_not .)
    FROM            reduce using rule 75 (expr -> expr_not .)
    JOIN_OPERATOR   reduce using rule 75 (expr -> expr_not .)
    WHERE           reduce using rule 75 (expr -> expr_not .)
    GROUP_BY        reduce using rule 75 (expr -> expr_not .)
    HAVING          reduce using rule 75 (expr -> expr_not .)
    ORDER_BY        reduce using rule 75 (expr -> expr_not .)
    $end            reduce using rule 75 (expr -> expr_not .)
    ON              reduce using rule 75 (expr -> expr_not .)
    USING           reduce using rule 75 (expr -> expr_not .)
    OPERATOR        reduce using rule 75 (expr -> expr_not .)
    PLUS_MINUS      reduce using rule 75 (expr -> expr_not .)
    SET_OPERATOR    reduce using rule 75 (expr -> expr_not .)
    AND             reduce using rule 75 (expr -> expr_not .)
    OR              reduce using rule 75 (expr -> expr_not .)
    STAR            reduce using rule 75 (expr -> expr_not .)
    AS              reduce using rule 75 (expr -> expr_not .)
    ASC             reduce using rule 75 (expr -> expr_not .)
    DESC            reduce using rule 75 (expr -> expr_not .)
    BETWEEN         reduce using rule 75 (expr -> expr_not .)
    IDENTIFIER      reduce using rule 75 (expr -> expr_not .)
    CAST            reduce using rule 75 (expr -> expr_not .)
    PARENT_R        reduce using rule 75 (expr -> expr_not .)
    END             reduce using rule 75 (expr -> expr_not .)
    WHEN            reduce using rule 75 (expr -> expr_not .)
    THEN            reduce using rule 75 (expr -> expr_not .)
    ELSE            reduce using rule 75 (expr -> expr_not .)


state 34

    (79) expr -> analytic_function .
    (10) analytic_function -> analytic_function . clause
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

  ! shift/reduce conflict for WITH resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for JOIN_OPERATOR resolved as shift
  ! shift/reduce conflict for WHERE resolved as shift
  ! shift/reduce conflict for GROUP_BY resolved as shift
  ! shift/reduce conflict for HAVING resolved as shift
  ! shift/reduce conflict for ORDER_BY resolved as shift
    COMMA           reduce using rule 79 (expr -> analytic_function .)
    $end            reduce using rule 79 (expr -> analytic_function .)
    ON              reduce using rule 79 (expr -> analytic_function .)
    USING           reduce using rule 79 (expr -> analytic_function .)
    OPERATOR        reduce using rule 79 (expr -> analytic_function .)
    PLUS_MINUS      reduce using rule 79 (expr -> analytic_function .)
    SET_OPERATOR    reduce using rule 79 (expr -> analytic_function .)
    AND             reduce using rule 79 (expr -> analytic_function .)
    OR              reduce using rule 79 (expr -> analytic_function .)
    STAR            reduce using rule 79 (expr -> analytic_function .)
    AS              reduce using rule 79 (expr -> analytic_function .)
    ASC             reduce using rule 79 (expr -> analytic_function .)
    DESC            reduce using rule 79 (expr -> analytic_function .)
    BETWEEN         reduce using rule 79 (expr -> analytic_function .)
    IDENTIFIER      reduce using rule 79 (expr -> analytic_function .)
    CAST            reduce using rule 79 (expr -> analytic_function .)
    PARENT_R        reduce using rule 79 (expr -> analytic_function .)
    END             reduce using rule 79 (expr -> analytic_function .)
    WHEN            reduce using rule 79 (expr -> analytic_function .)
    THEN            reduce using rule 79 (expr -> analytic_function .)
    ELSE            reduce using rule 79 (expr -> analytic_function .)
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

  ! WITH            [ reduce using rule 79 (expr -> analytic_function .) ]
  ! SELECT          [ reduce using rule 79 (expr -> analytic_function .) ]
  ! FROM            [ reduce using rule 79 (expr -> analytic_function .) ]
  ! JOIN_OPERATOR   [ reduce using rule 79 (expr -> analytic_function .) ]
  ! WHERE           [ reduce using rule 79 (expr -> analytic_function .) ]
  ! GROUP_BY        [ reduce using rule 79 (expr -> analytic_function .) ]
  ! HAVING          [ reduce using rule 79 (expr -> analytic_function .) ]
  ! ORDER_BY        [ reduce using rule 79 (expr -> analytic_function .) ]

    clause_having                  shift and go to state 15
    clause                         shift and go to state 71
    clause_with                    shift and go to state 18
    clause_join                    shift and go to state 3
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    clause_group_by                shift and go to state 16
    clause_select                  shift and go to state 17
    clause_from                    shift and go to state 14

state 35

    (46) expr_function -> CAST . expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R

    PARENT_L        shift and go to state 44

    expr_parent                    shift and go to state 72

state 36

    (64) expr_identifier -> IDENTIFIER .

    DOT             reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    PARENT_L        reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    OPERATOR        reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    PLUS_MINUS      reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    SET_OPERATOR    reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    AND             reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    OR              reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    STAR            reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    AS              reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    ASC             reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    DESC            reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    BETWEEN         reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    CAST            reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    END             reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    WHEN            reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    THEN            reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    ELSE            reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    COMMA           reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    WITH            reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    SELECT          reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    FROM            reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    JOIN_OPERATOR   reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    WHERE           reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    GROUP_BY        reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    HAVING          reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    ORDER_BY        reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    $end            reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    ON              reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    USING           reduce using rule 64 (expr_identifier -> IDENTIFIER .)
    PARENT_R        reduce using rule 64 (expr_identifier -> IDENTIFIER .)


state 37

    (76) expr -> expr_between .

    COMMA           reduce using rule 76 (expr -> expr_between .)
    WITH            reduce using rule 76 (expr -> expr_between .)
    SELECT          reduce using rule 76 (expr -> expr_between .)
    FROM            reduce using rule 76 (expr -> expr_between .)
    JOIN_OPERATOR   reduce using rule 76 (expr -> expr_between .)
    WHERE           reduce using rule 76 (expr -> expr_between .)
    GROUP_BY        reduce using rule 76 (expr -> expr_between .)
    HAVING          reduce using rule 76 (expr -> expr_between .)
    ORDER_BY        reduce using rule 76 (expr -> expr_between .)
    $end            reduce using rule 76 (expr -> expr_between .)
    ON              reduce using rule 76 (expr -> expr_between .)
    USING           reduce using rule 76 (expr -> expr_between .)
    OPERATOR        reduce using rule 76 (expr -> expr_between .)
    PLUS_MINUS      reduce using rule 76 (expr -> expr_between .)
    SET_OPERATOR    reduce using rule 76 (expr -> expr_between .)
    AND             reduce using rule 76 (expr -> expr_between .)
    OR              reduce using rule 76 (expr -> expr_between .)
    STAR            reduce using rule 76 (expr -> expr_between .)
    AS              reduce using rule 76 (expr -> expr_between .)
    ASC             reduce using rule 76 (expr -> expr_between .)
    DESC            reduce using rule 76 (expr -> expr_between .)
    BETWEEN         reduce using rule 76 (expr -> expr_between .)
    IDENTIFIER      reduce using rule 76 (expr -> expr_between .)
    CAST            reduce using rule 76 (expr -> expr_between .)
    PARENT_R        reduce using rule 76 (expr -> expr_between .)
    END             reduce using rule 76 (expr -> expr_between .)
    WHEN            reduce using rule 76 (expr -> expr_between .)
    THEN            reduce using rule 76 (expr -> expr_between .)
    ELSE            reduce using rule 76 (expr -> expr_between .)


state 38

    (81) term_literal -> STRING .

    COMMA           reduce using rule 81 (term_literal -> STRING .)
    WITH            reduce using rule 81 (term_literal -> STRING .)
    SELECT          reduce using rule 81 (term_literal -> STRING .)
    FROM            reduce using rule 81 (term_literal -> STRING .)
    JOIN_OPERATOR   reduce using rule 81 (term_literal -> STRING .)
    WHERE           reduce using rule 81 (term_literal -> STRING .)
    GROUP_BY        reduce using rule 81 (term_literal -> STRING .)
    HAVING          reduce using rule 81 (term_literal -> STRING .)
    ORDER_BY        reduce using rule 81 (term_literal -> STRING .)
    $end            reduce using rule 81 (term_literal -> STRING .)
    ON              reduce using rule 81 (term_literal -> STRING .)
    USING           reduce using rule 81 (term_literal -> STRING .)
    OPERATOR        reduce using rule 81 (term_literal -> STRING .)
    PLUS_MINUS      reduce using rule 81 (term_literal -> STRING .)
    SET_OPERATOR    reduce using rule 81 (term_literal -> STRING .)
    AND             reduce using rule 81 (term_literal -> STRING .)
    OR              reduce using rule 81 (term_literal -> STRING .)
    STAR            reduce using rule 81 (term_literal -> STRING .)
    AS              reduce using rule 81 (term_literal -> STRING .)
    ASC             reduce using rule 81 (term_literal -> STRING .)
    DESC            reduce using rule 81 (term_literal -> STRING .)
    BETWEEN         reduce using rule 81 (term_literal -> STRING .)
    IDENTIFIER      reduce using rule 81 (term_literal -> STRING .)
    CAST            reduce using rule 81 (term_literal -> STRING .)
    PARENT_R        reduce using rule 81 (term_literal -> STRING .)
    END             reduce using rule 81 (term_literal -> STRING .)
    WHEN            reduce using rule 81 (term_literal -> STRING .)
    THEN            reduce using rule 81 (term_literal -> STRING .)
    ELSE            reduce using rule 81 (term_literal -> STRING .)


state 39

    (12) clause_partition_by -> PARTITION_BY . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 73
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 40

    (80) term_literal -> NUMBER .

    COMMA           reduce using rule 80 (term_literal -> NUMBER .)
    WITH            reduce using rule 80 (term_literal -> NUMBER .)
    SELECT          reduce using rule 80 (term_literal -> NUMBER .)
    FROM            reduce using rule 80 (term_literal -> NUMBER .)
    JOIN_OPERATOR   reduce using rule 80 (term_literal -> NUMBER .)
    WHERE           reduce using rule 80 (term_literal -> NUMBER .)
    GROUP_BY        reduce using rule 80 (term_literal -> NUMBER .)
    HAVING          reduce using rule 80 (term_literal -> NUMBER .)
    ORDER_BY        reduce using rule 80 (term_literal -> NUMBER .)
    $end            reduce using rule 80 (term_literal -> NUMBER .)
    ON              reduce using rule 80 (term_literal -> NUMBER .)
    USING           reduce using rule 80 (term_literal -> NUMBER .)
    OPERATOR        reduce using rule 80 (term_literal -> NUMBER .)
    PLUS_MINUS      reduce using rule 80 (term_literal -> NUMBER .)
    SET_OPERATOR    reduce using rule 80 (term_literal -> NUMBER .)
    AND             reduce using rule 80 (term_literal -> NUMBER .)
    OR              reduce using rule 80 (term_literal -> NUMBER .)
    STAR            reduce using rule 80 (term_literal -> NUMBER .)
    AS              reduce using rule 80 (term_literal -> NUMBER .)
    ASC             reduce using rule 80 (term_literal -> NUMBER .)
    DESC            reduce using rule 80 (term_literal -> NUMBER .)
    BETWEEN         reduce using rule 80 (term_literal -> NUMBER .)
    IDENTIFIER      reduce using rule 80 (term_literal -> NUMBER .)
    CAST            reduce using rule 80 (term_literal -> NUMBER .)
    PARENT_R        reduce using rule 80 (term_literal -> NUMBER .)
    END             reduce using rule 80 (term_literal -> NUMBER .)
    WHEN            reduce using rule 80 (term_literal -> NUMBER .)
    THEN            reduce using rule 80 (term_literal -> NUMBER .)
    ELSE            reduce using rule 80 (term_literal -> NUMBER .)


state 41

    (60) expr_plus_minus -> PLUS_MINUS . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 74
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 42

    (67) expr -> expr_case .

    COMMA           reduce using rule 67 (expr -> expr_case .)
    WITH            reduce using rule 67 (expr -> expr_case .)
    SELECT          reduce using rule 67 (expr -> expr_case .)
    FROM            reduce using rule 67 (expr -> expr_case .)
    JOIN_OPERATOR   reduce using rule 67 (expr -> expr_case .)
    WHERE           reduce using rule 67 (expr -> expr_case .)
    GROUP_BY        reduce using rule 67 (expr -> expr_case .)
    HAVING          reduce using rule 67 (expr -> expr_case .)
    ORDER_BY        reduce using rule 67 (expr -> expr_case .)
    $end            reduce using rule 67 (expr -> expr_case .)
    ON              reduce using rule 67 (expr -> expr_case .)
    USING           reduce using rule 67 (expr -> expr_case .)
    OPERATOR        reduce using rule 67 (expr -> expr_case .)
    PLUS_MINUS      reduce using rule 67 (expr -> expr_case .)
    SET_OPERATOR    reduce using rule 67 (expr -> expr_case .)
    AND             reduce using rule 67 (expr -> expr_case .)
    OR              reduce using rule 67 (expr -> expr_case .)
    STAR            reduce using rule 67 (expr -> expr_case .)
    AS              reduce using rule 67 (expr -> expr_case .)
    ASC             reduce using rule 67 (expr -> expr_case .)
    DESC            reduce using rule 67 (expr -> expr_case .)
    BETWEEN         reduce using rule 67 (expr -> expr_case .)
    IDENTIFIER      reduce using rule 67 (expr -> expr_case .)
    CAST            reduce using rule 67 (expr -> expr_case .)
    PARENT_R        reduce using rule 67 (expr -> expr_case .)
    END             reduce using rule 67 (expr -> expr_case .)
    WHEN            reduce using rule 67 (expr -> expr_case .)
    THEN            reduce using rule 67 (expr -> expr_case .)
    ELSE            reduce using rule 67 (expr -> expr_case .)


state 43

    (71) expr -> expr_alias .

    COMMA           reduce using rule 71 (expr -> expr_alias .)
    WITH            reduce using rule 71 (expr -> expr_alias .)
    SELECT          reduce using rule 71 (expr -> expr_alias .)
    FROM            reduce using rule 71 (expr -> expr_alias .)
    JOIN_OPERATOR   reduce using rule 71 (expr -> expr_alias .)
    WHERE           reduce using rule 71 (expr -> expr_alias .)
    GROUP_BY        reduce using rule 71 (expr -> expr_alias .)
    HAVING          reduce using rule 71 (expr -> expr_alias .)
    ORDER_BY        reduce using rule 71 (expr -> expr_alias .)
    $end            reduce using rule 71 (expr -> expr_alias .)
    ON              reduce using rule 71 (expr -> expr_alias .)
    USING           reduce using rule 71 (expr -> expr_alias .)
    OPERATOR        reduce using rule 71 (expr -> expr_alias .)
    PLUS_MINUS      reduce using rule 71 (expr -> expr_alias .)
    SET_OPERATOR    reduce using rule 71 (expr -> expr_alias .)
    AND             reduce using rule 71 (expr -> expr_alias .)
    OR              reduce using rule 71 (expr -> expr_alias .)
    STAR            reduce using rule 71 (expr -> expr_alias .)
    AS              reduce using rule 71 (expr -> expr_alias .)
    ASC             reduce using rule 71 (expr -> expr_alias .)
    DESC            reduce using rule 71 (expr -> expr_alias .)
    BETWEEN         reduce using rule 71 (expr -> expr_alias .)
    IDENTIFIER      reduce using rule 71 (expr -> expr_alias .)
    CAST            reduce using rule 71 (expr -> expr_alias .)
    PARENT_R        reduce using rule 71 (expr -> expr_alias .)
    END             reduce using rule 71 (expr -> expr_alias .)
    WHEN            reduce using rule 71 (expr -> expr_alias .)
    THEN            reduce using rule 71 (expr -> expr_alias .)
    ELSE            reduce using rule 71 (expr -> expr_alias .)


state 44

    (47) expr_parent -> PARENT_L . expr_comma PARENT_R
    (48) expr_parent -> PARENT_L . empty PARENT_R
    (49) expr_comma -> . expr_comma COMMA expr
    (50) expr_comma -> . expr
    (83) empty -> .
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    PARENT_R        reduce using rule 83 (empty -> .)
    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    empty                          shift and go to state 75
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_comma                     shift and go to state 76
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 53
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 45

    (73) expr -> expr_order .

    COMMA           reduce using rule 73 (expr -> expr_order .)
    WITH            reduce using rule 73 (expr -> expr_order .)
    SELECT          reduce using rule 73 (expr -> expr_order .)
    FROM            reduce using rule 73 (expr -> expr_order .)
    JOIN_OPERATOR   reduce using rule 73 (expr -> expr_order .)
    WHERE           reduce using rule 73 (expr -> expr_order .)
    GROUP_BY        reduce using rule 73 (expr -> expr_order .)
    HAVING          reduce using rule 73 (expr -> expr_order .)
    ORDER_BY        reduce using rule 73 (expr -> expr_order .)
    $end            reduce using rule 73 (expr -> expr_order .)
    ON              reduce using rule 73 (expr -> expr_order .)
    USING           reduce using rule 73 (expr -> expr_order .)
    OPERATOR        reduce using rule 73 (expr -> expr_order .)
    PLUS_MINUS      reduce using rule 73 (expr -> expr_order .)
    SET_OPERATOR    reduce using rule 73 (expr -> expr_order .)
    AND             reduce using rule 73 (expr -> expr_order .)
    OR              reduce using rule 73 (expr -> expr_order .)
    STAR            reduce using rule 73 (expr -> expr_order .)
    AS              reduce using rule 73 (expr -> expr_order .)
    ASC             reduce using rule 73 (expr -> expr_order .)
    DESC            reduce using rule 73 (expr -> expr_order .)
    BETWEEN         reduce using rule 73 (expr -> expr_order .)
    IDENTIFIER      reduce using rule 73 (expr -> expr_order .)
    CAST            reduce using rule 73 (expr -> expr_order .)
    PARENT_R        reduce using rule 73 (expr -> expr_order .)
    END             reduce using rule 73 (expr -> expr_order .)
    WHEN            reduce using rule 73 (expr -> expr_order .)
    THEN            reduce using rule 73 (expr -> expr_order .)
    ELSE            reduce using rule 73 (expr -> expr_order .)


state 46

    (77) expr -> expr_identifier .
    (45) expr_function -> expr_identifier . expr_parent
    (62) expr_identifier -> expr_identifier . DOT IDENTIFIER
    (63) expr_identifier -> expr_identifier . DOT STAR
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R

    COMMA           reduce using rule 77 (expr -> expr_identifier .)
    WITH            reduce using rule 77 (expr -> expr_identifier .)
    SELECT          reduce using rule 77 (expr -> expr_identifier .)
    FROM            reduce using rule 77 (expr -> expr_identifier .)
    JOIN_OPERATOR   reduce using rule 77 (expr -> expr_identifier .)
    WHERE           reduce using rule 77 (expr -> expr_identifier .)
    GROUP_BY        reduce using rule 77 (expr -> expr_identifier .)
    HAVING          reduce using rule 77 (expr -> expr_identifier .)
    ORDER_BY        reduce using rule 77 (expr -> expr_identifier .)
    $end            reduce using rule 77 (expr -> expr_identifier .)
    ON              reduce using rule 77 (expr -> expr_identifier .)
    USING           reduce using rule 77 (expr -> expr_identifier .)
    OPERATOR        reduce using rule 77 (expr -> expr_identifier .)
    PLUS_MINUS      reduce using rule 77 (expr -> expr_identifier .)
    SET_OPERATOR    reduce using rule 77 (expr -> expr_identifier .)
    AND             reduce using rule 77 (expr -> expr_identifier .)
    OR              reduce using rule 77 (expr -> expr_identifier .)
    STAR            reduce using rule 77 (expr -> expr_identifier .)
    AS              reduce using rule 77 (expr -> expr_identifier .)
    ASC             reduce using rule 77 (expr -> expr_identifier .)
    DESC            reduce using rule 77 (expr -> expr_identifier .)
    BETWEEN         reduce using rule 77 (expr -> expr_identifier .)
    IDENTIFIER      reduce using rule 77 (expr -> expr_identifier .)
    CAST            reduce using rule 77 (expr -> expr_identifier .)
    PARENT_R        reduce using rule 77 (expr -> expr_identifier .)
    END             reduce using rule 77 (expr -> expr_identifier .)
    WHEN            reduce using rule 77 (expr -> expr_identifier .)
    THEN            reduce using rule 77 (expr -> expr_identifier .)
    ELSE            reduce using rule 77 (expr -> expr_identifier .)
    DOT             shift and go to state 78
    PARENT_L        shift and go to state 44

    expr_parent                    shift and go to state 77

state 47

    (24) clause_join -> JOIN_OPERATOR expr . ON expr
    (25) clause_join -> JOIN_OPERATOR expr . USING expr_parent
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    ON              shift and go to state 80
    USING           shift and go to state 90
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 48

    (78) expr -> term_literal .

    COMMA           reduce using rule 78 (expr -> term_literal .)
    WITH            reduce using rule 78 (expr -> term_literal .)
    SELECT          reduce using rule 78 (expr -> term_literal .)
    FROM            reduce using rule 78 (expr -> term_literal .)
    JOIN_OPERATOR   reduce using rule 78 (expr -> term_literal .)
    WHERE           reduce using rule 78 (expr -> term_literal .)
    GROUP_BY        reduce using rule 78 (expr -> term_literal .)
    HAVING          reduce using rule 78 (expr -> term_literal .)
    ORDER_BY        reduce using rule 78 (expr -> term_literal .)
    $end            reduce using rule 78 (expr -> term_literal .)
    ON              reduce using rule 78 (expr -> term_literal .)
    USING           reduce using rule 78 (expr -> term_literal .)
    OPERATOR        reduce using rule 78 (expr -> term_literal .)
    PLUS_MINUS      reduce using rule 78 (expr -> term_literal .)
    SET_OPERATOR    reduce using rule 78 (expr -> term_literal .)
    AND             reduce using rule 78 (expr -> term_literal .)
    OR              reduce using rule 78 (expr -> term_literal .)
    STAR            reduce using rule 78 (expr -> term_literal .)
    AS              reduce using rule 78 (expr -> term_literal .)
    ASC             reduce using rule 78 (expr -> term_literal .)
    DESC            reduce using rule 78 (expr -> term_literal .)
    BETWEEN         reduce using rule 78 (expr -> term_literal .)
    IDENTIFIER      reduce using rule 78 (expr -> term_literal .)
    CAST            reduce using rule 78 (expr -> term_literal .)
    PARENT_R        reduce using rule 78 (expr -> term_literal .)
    END             reduce using rule 78 (expr -> term_literal .)
    WHEN            reduce using rule 78 (expr -> term_literal .)
    THEN            reduce using rule 78 (expr -> term_literal .)
    ELSE            reduce using rule 78 (expr -> term_literal .)


state 49

    (61) expr_not -> NOT . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 93
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 50

    (11) analytic_function -> clause_partition_by .

    COMMA           reduce using rule 11 (analytic_function -> clause_partition_by .)
    WITH            reduce using rule 11 (analytic_function -> clause_partition_by .)
    SELECT          reduce using rule 11 (analytic_function -> clause_partition_by .)
    FROM            reduce using rule 11 (analytic_function -> clause_partition_by .)
    JOIN_OPERATOR   reduce using rule 11 (analytic_function -> clause_partition_by .)
    WHERE           reduce using rule 11 (analytic_function -> clause_partition_by .)
    GROUP_BY        reduce using rule 11 (analytic_function -> clause_partition_by .)
    HAVING          reduce using rule 11 (analytic_function -> clause_partition_by .)
    ORDER_BY        reduce using rule 11 (analytic_function -> clause_partition_by .)
    $end            reduce using rule 11 (analytic_function -> clause_partition_by .)
    ON              reduce using rule 11 (analytic_function -> clause_partition_by .)
    USING           reduce using rule 11 (analytic_function -> clause_partition_by .)
    OPERATOR        reduce using rule 11 (analytic_function -> clause_partition_by .)
    PLUS_MINUS      reduce using rule 11 (analytic_function -> clause_partition_by .)
    SET_OPERATOR    reduce using rule 11 (analytic_function -> clause_partition_by .)
    AND             reduce using rule 11 (analytic_function -> clause_partition_by .)
    OR              reduce using rule 11 (analytic_function -> clause_partition_by .)
    STAR            reduce using rule 11 (analytic_function -> clause_partition_by .)
    AS              reduce using rule 11 (analytic_function -> clause_partition_by .)
    ASC             reduce using rule 11 (analytic_function -> clause_partition_by .)
    DESC            reduce using rule 11 (analytic_function -> clause_partition_by .)
    BETWEEN         reduce using rule 11 (analytic_function -> clause_partition_by .)
    IDENTIFIER      reduce using rule 11 (analytic_function -> clause_partition_by .)
    CAST            reduce using rule 11 (analytic_function -> clause_partition_by .)
    PARENT_R        reduce using rule 11 (analytic_function -> clause_partition_by .)
    END             reduce using rule 11 (analytic_function -> clause_partition_by .)
    WHEN            reduce using rule 11 (analytic_function -> clause_partition_by .)
    THEN            reduce using rule 11 (analytic_function -> clause_partition_by .)
    ELSE            reduce using rule 11 (analytic_function -> clause_partition_by .)


state 51

    (8) select -> select clause .

    WITH            reduce using rule 8 (select -> select clause .)
    SELECT          reduce using rule 8 (select -> select clause .)
    FROM            reduce using rule 8 (select -> select clause .)
    JOIN_OPERATOR   reduce using rule 8 (select -> select clause .)
    WHERE           reduce using rule 8 (select -> select clause .)
    GROUP_BY        reduce using rule 8 (select -> select clause .)
    HAVING          reduce using rule 8 (select -> select clause .)
    ORDER_BY        reduce using rule 8 (select -> select clause .)
    OPERATOR        reduce using rule 8 (select -> select clause .)
    PLUS_MINUS      reduce using rule 8 (select -> select clause .)
    SET_OPERATOR    reduce using rule 8 (select -> select clause .)
    AND             reduce using rule 8 (select -> select clause .)
    OR              reduce using rule 8 (select -> select clause .)
    STAR            reduce using rule 8 (select -> select clause .)
    AS              reduce using rule 8 (select -> select clause .)
    ASC             reduce using rule 8 (select -> select clause .)
    DESC            reduce using rule 8 (select -> select clause .)
    BETWEEN         reduce using rule 8 (select -> select clause .)
    IDENTIFIER      reduce using rule 8 (select -> select clause .)
    CAST            reduce using rule 8 (select -> select clause .)
    END             reduce using rule 8 (select -> select clause .)
    WHEN            reduce using rule 8 (select -> select clause .)
    THEN            reduce using rule 8 (select -> select clause .)
    ELSE            reduce using rule 8 (select -> select clause .)
    COMMA           reduce using rule 8 (select -> select clause .)
    $end            reduce using rule 8 (select -> select clause .)
    ON              reduce using rule 8 (select -> select clause .)
    USING           reduce using rule 8 (select -> select clause .)
    PARENT_R        reduce using rule 8 (select -> select clause .)


state 52

    (29) clause_order_by -> ORDER_BY expr_comma .
    (49) expr_comma -> expr_comma . COMMA expr

  ! shift/reduce conflict for COMMA resolved as shift
    WITH            reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    SELECT          reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    FROM            reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    JOIN_OPERATOR   reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    WHERE           reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    GROUP_BY        reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    HAVING          reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    ORDER_BY        reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    $end            reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    ON              reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    USING           reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    OPERATOR        reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    PLUS_MINUS      reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    SET_OPERATOR    reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    AND             reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    OR              reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    STAR            reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    AS              reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    ASC             reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    DESC            reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    BETWEEN         reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    IDENTIFIER      reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    CAST            reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    PARENT_R        reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    END             reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    WHEN            reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    THEN            reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    ELSE            reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .)
    COMMA           shift and go to state 94

  ! COMMA           [ reduce using rule 29 (clause_order_by -> ORDER_BY expr_comma .) ]


state 53

    (50) expr_comma -> expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

  ! shift/reduce conflict for OPERATOR resolved as shift
  ! shift/reduce conflict for PLUS_MINUS resolved as shift
  ! shift/reduce conflict for SET_OPERATOR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
    COMMA           reduce using rule 50 (expr_comma -> expr .)
    WITH            reduce using rule 50 (expr_comma -> expr .)
    SELECT          reduce using rule 50 (expr_comma -> expr .)
    FROM            reduce using rule 50 (expr_comma -> expr .)
    JOIN_OPERATOR   reduce using rule 50 (expr_comma -> expr .)
    WHERE           reduce using rule 50 (expr_comma -> expr .)
    GROUP_BY        reduce using rule 50 (expr_comma -> expr .)
    HAVING          reduce using rule 50 (expr_comma -> expr .)
    ORDER_BY        reduce using rule 50 (expr_comma -> expr .)
    $end            reduce using rule 50 (expr_comma -> expr .)
    ON              reduce using rule 50 (expr_comma -> expr .)
    USING           reduce using rule 50 (expr_comma -> expr .)
    PARENT_R        reduce using rule 50 (expr_comma -> expr .)
    END             reduce using rule 50 (expr_comma -> expr .)
    WHEN            reduce using rule 50 (expr_comma -> expr .)
    THEN            reduce using rule 50 (expr_comma -> expr .)
    ELSE            reduce using rule 50 (expr_comma -> expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

  ! OPERATOR        [ reduce using rule 50 (expr_comma -> expr .) ]
  ! PLUS_MINUS      [ reduce using rule 50 (expr_comma -> expr .) ]
  ! SET_OPERATOR    [ reduce using rule 50 (expr_comma -> expr .) ]
  ! AND             [ reduce using rule 50 (expr_comma -> expr .) ]
  ! OR              [ reduce using rule 50 (expr_comma -> expr .) ]
  ! STAR            [ reduce using rule 50 (expr_comma -> expr .) ]
  ! AS              [ reduce using rule 50 (expr_comma -> expr .) ]
  ! ASC             [ reduce using rule 50 (expr_comma -> expr .) ]
  ! DESC            [ reduce using rule 50 (expr_comma -> expr .) ]
  ! BETWEEN         [ reduce using rule 50 (expr_comma -> expr .) ]
  ! IDENTIFIER      [ reduce using rule 50 (expr_comma -> expr .) ]
  ! CAST            [ reduce using rule 50 (expr_comma -> expr .) ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 54

    (21) clause_with -> WITH expr_comma .
    (49) expr_comma -> expr_comma . COMMA expr

  ! shift/reduce conflict for COMMA resolved as shift
    WITH            reduce using rule 21 (clause_with -> WITH expr_comma .)
    SELECT          reduce using rule 21 (clause_with -> WITH expr_comma .)
    FROM            reduce using rule 21 (clause_with -> WITH expr_comma .)
    JOIN_OPERATOR   reduce using rule 21 (clause_with -> WITH expr_comma .)
    WHERE           reduce using rule 21 (clause_with -> WITH expr_comma .)
    GROUP_BY        reduce using rule 21 (clause_with -> WITH expr_comma .)
    HAVING          reduce using rule 21 (clause_with -> WITH expr_comma .)
    ORDER_BY        reduce using rule 21 (clause_with -> WITH expr_comma .)
    $end            reduce using rule 21 (clause_with -> WITH expr_comma .)
    ON              reduce using rule 21 (clause_with -> WITH expr_comma .)
    USING           reduce using rule 21 (clause_with -> WITH expr_comma .)
    OPERATOR        reduce using rule 21 (clause_with -> WITH expr_comma .)
    PLUS_MINUS      reduce using rule 21 (clause_with -> WITH expr_comma .)
    SET_OPERATOR    reduce using rule 21 (clause_with -> WITH expr_comma .)
    AND             reduce using rule 21 (clause_with -> WITH expr_comma .)
    OR              reduce using rule 21 (clause_with -> WITH expr_comma .)
    STAR            reduce using rule 21 (clause_with -> WITH expr_comma .)
    AS              reduce using rule 21 (clause_with -> WITH expr_comma .)
    ASC             reduce using rule 21 (clause_with -> WITH expr_comma .)
    DESC            reduce using rule 21 (clause_with -> WITH expr_comma .)
    BETWEEN         reduce using rule 21 (clause_with -> WITH expr_comma .)
    IDENTIFIER      reduce using rule 21 (clause_with -> WITH expr_comma .)
    CAST            reduce using rule 21 (clause_with -> WITH expr_comma .)
    PARENT_R        reduce using rule 21 (clause_with -> WITH expr_comma .)
    END             reduce using rule 21 (clause_with -> WITH expr_comma .)
    WHEN            reduce using rule 21 (clause_with -> WITH expr_comma .)
    THEN            reduce using rule 21 (clause_with -> WITH expr_comma .)
    ELSE            reduce using rule 21 (clause_with -> WITH expr_comma .)
    COMMA           shift and go to state 94

  ! COMMA           [ reduce using rule 21 (clause_with -> WITH expr_comma .) ]


state 55

    (33) expr_select_modifier -> ALL .

    CASE            reduce using rule 33 (expr_select_modifier -> ALL .)
    CAST            reduce using rule 33 (expr_select_modifier -> ALL .)
    PARENT_L        reduce using rule 33 (expr_select_modifier -> ALL .)
    PLUS_MINUS      reduce using rule 33 (expr_select_modifier -> ALL .)
    NOT             reduce using rule 33 (expr_select_modifier -> ALL .)
    IDENTIFIER      reduce using rule 33 (expr_select_modifier -> ALL .)
    STAR            reduce using rule 33 (expr_select_modifier -> ALL .)
    NUMBER          reduce using rule 33 (expr_select_modifier -> ALL .)
    STRING          reduce using rule 33 (expr_select_modifier -> ALL .)
    NULL            reduce using rule 33 (expr_select_modifier -> ALL .)
    PARTITION_BY    reduce using rule 33 (expr_select_modifier -> ALL .)
    WITH            reduce using rule 33 (expr_select_modifier -> ALL .)
    SELECT          reduce using rule 33 (expr_select_modifier -> ALL .)
    FROM            reduce using rule 33 (expr_select_modifier -> ALL .)
    JOIN_OPERATOR   reduce using rule 33 (expr_select_modifier -> ALL .)
    WHERE           reduce using rule 33 (expr_select_modifier -> ALL .)
    GROUP_BY        reduce using rule 33 (expr_select_modifier -> ALL .)
    HAVING          reduce using rule 33 (expr_select_modifier -> ALL .)
    ORDER_BY        reduce using rule 33 (expr_select_modifier -> ALL .)


state 56

    (31) expr_select_modifier -> DISTINCT .

    CASE            reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    CAST            reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    PARENT_L        reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    PLUS_MINUS      reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    NOT             reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    IDENTIFIER      reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    STAR            reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    NUMBER          reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    STRING          reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    NULL            reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    PARTITION_BY    reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    WITH            reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    SELECT          reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    FROM            reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    JOIN_OPERATOR   reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    WHERE           reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    GROUP_BY        reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    HAVING          reduce using rule 31 (expr_select_modifier -> DISTINCT .)
    ORDER_BY        reduce using rule 31 (expr_select_modifier -> DISTINCT .)


state 57

    (32) expr_select_modifier -> UNIQUE .

    CASE            reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    CAST            reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    PARENT_L        reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    PLUS_MINUS      reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    NOT             reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    IDENTIFIER      reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    STAR            reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    NUMBER          reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    STRING          reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    NULL            reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    PARTITION_BY    reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    WITH            reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    SELECT          reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    FROM            reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    JOIN_OPERATOR   reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    WHERE           reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    GROUP_BY        reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    HAVING          reduce using rule 32 (expr_select_modifier -> UNIQUE .)
    ORDER_BY        reduce using rule 32 (expr_select_modifier -> UNIQUE .)


state 58

    (22) clause_select -> SELECT expr_select_modifier . expr_comma
    (49) expr_comma -> . expr_comma COMMA expr
    (50) expr_comma -> . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_comma                     shift and go to state 95
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 53
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 59

    (30) expr_select_modifier -> empty .

    CASE            reduce using rule 30 (expr_select_modifier -> empty .)
    CAST            reduce using rule 30 (expr_select_modifier -> empty .)
    PARENT_L        reduce using rule 30 (expr_select_modifier -> empty .)
    PLUS_MINUS      reduce using rule 30 (expr_select_modifier -> empty .)
    NOT             reduce using rule 30 (expr_select_modifier -> empty .)
    IDENTIFIER      reduce using rule 30 (expr_select_modifier -> empty .)
    STAR            reduce using rule 30 (expr_select_modifier -> empty .)
    NUMBER          reduce using rule 30 (expr_select_modifier -> empty .)
    STRING          reduce using rule 30 (expr_select_modifier -> empty .)
    NULL            reduce using rule 30 (expr_select_modifier -> empty .)
    PARTITION_BY    reduce using rule 30 (expr_select_modifier -> empty .)
    WITH            reduce using rule 30 (expr_select_modifier -> empty .)
    SELECT          reduce using rule 30 (expr_select_modifier -> empty .)
    FROM            reduce using rule 30 (expr_select_modifier -> empty .)
    JOIN_OPERATOR   reduce using rule 30 (expr_select_modifier -> empty .)
    WHERE           reduce using rule 30 (expr_select_modifier -> empty .)
    GROUP_BY        reduce using rule 30 (expr_select_modifier -> empty .)
    HAVING          reduce using rule 30 (expr_select_modifier -> empty .)
    ORDER_BY        reduce using rule 30 (expr_select_modifier -> empty .)


state 60

    (26) clause_where -> WHERE expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

  ! shift/reduce conflict for OPERATOR resolved as shift
  ! shift/reduce conflict for PLUS_MINUS resolved as shift
  ! shift/reduce conflict for SET_OPERATOR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
    WITH            reduce using rule 26 (clause_where -> WHERE expr .)
    SELECT          reduce using rule 26 (clause_where -> WHERE expr .)
    FROM            reduce using rule 26 (clause_where -> WHERE expr .)
    JOIN_OPERATOR   reduce using rule 26 (clause_where -> WHERE expr .)
    WHERE           reduce using rule 26 (clause_where -> WHERE expr .)
    GROUP_BY        reduce using rule 26 (clause_where -> WHERE expr .)
    HAVING          reduce using rule 26 (clause_where -> WHERE expr .)
    ORDER_BY        reduce using rule 26 (clause_where -> WHERE expr .)
    END             reduce using rule 26 (clause_where -> WHERE expr .)
    WHEN            reduce using rule 26 (clause_where -> WHERE expr .)
    THEN            reduce using rule 26 (clause_where -> WHERE expr .)
    ELSE            reduce using rule 26 (clause_where -> WHERE expr .)
    COMMA           reduce using rule 26 (clause_where -> WHERE expr .)
    $end            reduce using rule 26 (clause_where -> WHERE expr .)
    ON              reduce using rule 26 (clause_where -> WHERE expr .)
    USING           reduce using rule 26 (clause_where -> WHERE expr .)
    PARENT_R        reduce using rule 26 (clause_where -> WHERE expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

  ! OPERATOR        [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! PLUS_MINUS      [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! SET_OPERATOR    [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! AND             [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! OR              [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! STAR            [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! AS              [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! ASC             [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! DESC            [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! BETWEEN         [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! IDENTIFIER      [ reduce using rule 26 (clause_where -> WHERE expr .) ]
  ! CAST            [ reduce using rule 26 (clause_where -> WHERE expr .) ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 61

    (7) create_view -> CREATE_VIEW expr_as .
    (72) expr -> expr_as .

    $end            reduce using rule 7 (create_view -> CREATE_VIEW expr_as .)
    AS              reduce using rule 72 (expr -> expr_as .)
    OPERATOR        reduce using rule 72 (expr -> expr_as .)
    PLUS_MINUS      reduce using rule 72 (expr -> expr_as .)
    SET_OPERATOR    reduce using rule 72 (expr -> expr_as .)
    AND             reduce using rule 72 (expr -> expr_as .)
    OR              reduce using rule 72 (expr -> expr_as .)
    STAR            reduce using rule 72 (expr -> expr_as .)
    ASC             reduce using rule 72 (expr -> expr_as .)
    DESC            reduce using rule 72 (expr -> expr_as .)
    BETWEEN         reduce using rule 72 (expr -> expr_as .)
    IDENTIFIER      reduce using rule 72 (expr -> expr_as .)
    CAST            reduce using rule 72 (expr -> expr_as .)


state 62

    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    AS              shift and go to state 87
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 63

    (23) clause_from -> FROM expr_comma .
    (49) expr_comma -> expr_comma . COMMA expr

  ! shift/reduce conflict for COMMA resolved as shift
    WITH            reduce using rule 23 (clause_from -> FROM expr_comma .)
    SELECT          reduce using rule 23 (clause_from -> FROM expr_comma .)
    FROM            reduce using rule 23 (clause_from -> FROM expr_comma .)
    JOIN_OPERATOR   reduce using rule 23 (clause_from -> FROM expr_comma .)
    WHERE           reduce using rule 23 (clause_from -> FROM expr_comma .)
    GROUP_BY        reduce using rule 23 (clause_from -> FROM expr_comma .)
    HAVING          reduce using rule 23 (clause_from -> FROM expr_comma .)
    ORDER_BY        reduce using rule 23 (clause_from -> FROM expr_comma .)
    $end            reduce using rule 23 (clause_from -> FROM expr_comma .)
    ON              reduce using rule 23 (clause_from -> FROM expr_comma .)
    USING           reduce using rule 23 (clause_from -> FROM expr_comma .)
    OPERATOR        reduce using rule 23 (clause_from -> FROM expr_comma .)
    PLUS_MINUS      reduce using rule 23 (clause_from -> FROM expr_comma .)
    SET_OPERATOR    reduce using rule 23 (clause_from -> FROM expr_comma .)
    AND             reduce using rule 23 (clause_from -> FROM expr_comma .)
    OR              reduce using rule 23 (clause_from -> FROM expr_comma .)
    STAR            reduce using rule 23 (clause_from -> FROM expr_comma .)
    AS              reduce using rule 23 (clause_from -> FROM expr_comma .)
    ASC             reduce using rule 23 (clause_from -> FROM expr_comma .)
    DESC            reduce using rule 23 (clause_from -> FROM expr_comma .)
    BETWEEN         reduce using rule 23 (clause_from -> FROM expr_comma .)
    IDENTIFIER      reduce using rule 23 (clause_from -> FROM expr_comma .)
    CAST            reduce using rule 23 (clause_from -> FROM expr_comma .)
    PARENT_R        reduce using rule 23 (clause_from -> FROM expr_comma .)
    END             reduce using rule 23 (clause_from -> FROM expr_comma .)
    WHEN            reduce using rule 23 (clause_from -> FROM expr_comma .)
    THEN            reduce using rule 23 (clause_from -> FROM expr_comma .)
    ELSE            reduce using rule 23 (clause_from -> FROM expr_comma .)
    COMMA           shift and go to state 94

  ! COMMA           [ reduce using rule 23 (clause_from -> FROM expr_comma .) ]


state 64

    (27) clause_group_by -> GROUP_BY expr_comma .
    (49) expr_comma -> expr_comma . COMMA expr

  ! shift/reduce conflict for COMMA resolved as shift
    WITH            reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    SELECT          reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    FROM            reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    JOIN_OPERATOR   reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    WHERE           reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    GROUP_BY        reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    HAVING          reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    ORDER_BY        reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    $end            reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    ON              reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    USING           reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    OPERATOR        reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    PLUS_MINUS      reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    SET_OPERATOR    reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    AND             reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    OR              reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    STAR            reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    AS              reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    ASC             reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    DESC            reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    BETWEEN         reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    IDENTIFIER      reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    CAST            reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    PARENT_R        reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    END             reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    WHEN            reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    THEN            reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    ELSE            reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .)
    COMMA           shift and go to state 94

  ! COMMA           [ reduce using rule 27 (clause_group_by -> GROUP_BY expr_comma .) ]


state 65

    (28) clause_having -> HAVING expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

  ! shift/reduce conflict for OPERATOR resolved as shift
  ! shift/reduce conflict for PLUS_MINUS resolved as shift
  ! shift/reduce conflict for SET_OPERATOR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
    COMMA           reduce using rule 28 (clause_having -> HAVING expr .)
    WITH            reduce using rule 28 (clause_having -> HAVING expr .)
    SELECT          reduce using rule 28 (clause_having -> HAVING expr .)
    FROM            reduce using rule 28 (clause_having -> HAVING expr .)
    JOIN_OPERATOR   reduce using rule 28 (clause_having -> HAVING expr .)
    WHERE           reduce using rule 28 (clause_having -> HAVING expr .)
    GROUP_BY        reduce using rule 28 (clause_having -> HAVING expr .)
    HAVING          reduce using rule 28 (clause_having -> HAVING expr .)
    ORDER_BY        reduce using rule 28 (clause_having -> HAVING expr .)
    $end            reduce using rule 28 (clause_having -> HAVING expr .)
    ON              reduce using rule 28 (clause_having -> HAVING expr .)
    USING           reduce using rule 28 (clause_having -> HAVING expr .)
    PARENT_R        reduce using rule 28 (clause_having -> HAVING expr .)
    END             reduce using rule 28 (clause_having -> HAVING expr .)
    WHEN            reduce using rule 28 (clause_having -> HAVING expr .)
    THEN            reduce using rule 28 (clause_having -> HAVING expr .)
    ELSE            reduce using rule 28 (clause_having -> HAVING expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

  ! OPERATOR        [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! PLUS_MINUS      [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! SET_OPERATOR    [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! AND             [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! OR              [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! STAR            [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! AS              [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! ASC             [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! DESC            [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! BETWEEN         [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! IDENTIFIER      [ reduce using rule 28 (clause_having -> HAVING expr .) ]
  ! CAST            [ reduce using rule 28 (clause_having -> HAVING expr .) ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 66

    (6) create_table -> CREATE_TABLE expr_identifier . expr_parent
    (62) expr_identifier -> expr_identifier . DOT IDENTIFIER
    (63) expr_identifier -> expr_identifier . DOT STAR
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R

    DOT             shift and go to state 78
    PARENT_L        shift and go to state 44

    expr_parent                    shift and go to state 96

state 67

    (38) expr_case -> CASE expr_conditions . END
    (39) expr_conditions -> expr_conditions . WHEN expr
    (40) expr_conditions -> expr_conditions . THEN expr
    (41) expr_conditions -> expr_conditions . ELSE expr

    END             shift and go to state 97
    WHEN            shift and go to state 99
    THEN            shift and go to state 98
    ELSE            shift and go to state 100


state 68

    (43) expr_conditions -> THEN . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 101
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 69

    (42) expr_conditions -> WHEN . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 102
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 70

    (44) expr_conditions -> ELSE . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 103
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 71

    (10) analytic_function -> analytic_function clause .

    COMMA           reduce using rule 10 (analytic_function -> analytic_function clause .)
    WITH            reduce using rule 10 (analytic_function -> analytic_function clause .)
    SELECT          reduce using rule 10 (analytic_function -> analytic_function clause .)
    FROM            reduce using rule 10 (analytic_function -> analytic_function clause .)
    JOIN_OPERATOR   reduce using rule 10 (analytic_function -> analytic_function clause .)
    WHERE           reduce using rule 10 (analytic_function -> analytic_function clause .)
    GROUP_BY        reduce using rule 10 (analytic_function -> analytic_function clause .)
    HAVING          reduce using rule 10 (analytic_function -> analytic_function clause .)
    ORDER_BY        reduce using rule 10 (analytic_function -> analytic_function clause .)
    $end            reduce using rule 10 (analytic_function -> analytic_function clause .)
    ON              reduce using rule 10 (analytic_function -> analytic_function clause .)
    USING           reduce using rule 10 (analytic_function -> analytic_function clause .)
    OPERATOR        reduce using rule 10 (analytic_function -> analytic_function clause .)
    PLUS_MINUS      reduce using rule 10 (analytic_function -> analytic_function clause .)
    SET_OPERATOR    reduce using rule 10 (analytic_function -> analytic_function clause .)
    AND             reduce using rule 10 (analytic_function -> analytic_function clause .)
    OR              reduce using rule 10 (analytic_function -> analytic_function clause .)
    STAR            reduce using rule 10 (analytic_function -> analytic_function clause .)
    AS              reduce using rule 10 (analytic_function -> analytic_function clause .)
    ASC             reduce using rule 10 (analytic_function -> analytic_function clause .)
    DESC            reduce using rule 10 (analytic_function -> analytic_function clause .)
    BETWEEN         reduce using rule 10 (analytic_function -> analytic_function clause .)
    IDENTIFIER      reduce using rule 10 (analytic_function -> analytic_function clause .)
    CAST            reduce using rule 10 (analytic_function -> analytic_function clause .)
    PARENT_R        reduce using rule 10 (analytic_function -> analytic_function clause .)
    END             reduce using rule 10 (analytic_function -> analytic_function clause .)
    WHEN            reduce using rule 10 (analytic_function -> analytic_function clause .)
    THEN            reduce using rule 10 (analytic_function -> analytic_function clause .)
    ELSE            reduce using rule 10 (analytic_function -> analytic_function clause .)


state 72

    (46) expr_function -> CAST expr_parent .

    COMMA           reduce using rule 46 (expr_function -> CAST expr_parent .)
    WITH            reduce using rule 46 (expr_function -> CAST expr_parent .)
    SELECT          reduce using rule 46 (expr_function -> CAST expr_parent .)
    FROM            reduce using rule 46 (expr_function -> CAST expr_parent .)
    JOIN_OPERATOR   reduce using rule 46 (expr_function -> CAST expr_parent .)
    WHERE           reduce using rule 46 (expr_function -> CAST expr_parent .)
    GROUP_BY        reduce using rule 46 (expr_function -> CAST expr_parent .)
    HAVING          reduce using rule 46 (expr_function -> CAST expr_parent .)
    ORDER_BY        reduce using rule 46 (expr_function -> CAST expr_parent .)
    $end            reduce using rule 46 (expr_function -> CAST expr_parent .)
    ON              reduce using rule 46 (expr_function -> CAST expr_parent .)
    USING           reduce using rule 46 (expr_function -> CAST expr_parent .)
    OPERATOR        reduce using rule 46 (expr_function -> CAST expr_parent .)
    PLUS_MINUS      reduce using rule 46 (expr_function -> CAST expr_parent .)
    SET_OPERATOR    reduce using rule 46 (expr_function -> CAST expr_parent .)
    AND             reduce using rule 46 (expr_function -> CAST expr_parent .)
    OR              reduce using rule 46 (expr_function -> CAST expr_parent .)
    STAR            reduce using rule 46 (expr_function -> CAST expr_parent .)
    AS              reduce using rule 46 (expr_function -> CAST expr_parent .)
    ASC             reduce using rule 46 (expr_function -> CAST expr_parent .)
    DESC            reduce using rule 46 (expr_function -> CAST expr_parent .)
    BETWEEN         reduce using rule 46 (expr_function -> CAST expr_parent .)
    IDENTIFIER      reduce using rule 46 (expr_function -> CAST expr_parent .)
    CAST            reduce using rule 46 (expr_function -> CAST expr_parent .)
    PARENT_R        reduce using rule 46 (expr_function -> CAST expr_parent .)
    END             reduce using rule 46 (expr_function -> CAST expr_parent .)
    WHEN            reduce using rule 46 (expr_function -> CAST expr_parent .)
    THEN            reduce using rule 46 (expr_function -> CAST expr_parent .)
    ELSE            reduce using rule 46 (expr_function -> CAST expr_parent .)


state 73

    (12) clause_partition_by -> PARTITION_BY expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

  ! shift/reduce conflict for OPERATOR resolved as shift
  ! shift/reduce conflict for PLUS_MINUS resolved as shift
  ! shift/reduce conflict for SET_OPERATOR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
    COMMA           reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    WITH            reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    SELECT          reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    FROM            reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    JOIN_OPERATOR   reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    WHERE           reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    GROUP_BY        reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    HAVING          reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    ORDER_BY        reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    $end            reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    ON              reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    USING           reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    PARENT_R        reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    END             reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    WHEN            reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    THEN            reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    ELSE            reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

  ! OPERATOR        [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! PLUS_MINUS      [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! SET_OPERATOR    [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! AND             [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! OR              [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! STAR            [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! AS              [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! ASC             [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! DESC            [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! BETWEEN         [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! IDENTIFIER      [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]
  ! CAST            [ reduce using rule 12 (clause_partition_by -> PARTITION_BY expr .) ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 74

    (60) expr_plus_minus -> PLUS_MINUS expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    COMMA           reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    WITH            reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    SELECT          reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    FROM            reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    JOIN_OPERATOR   reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    WHERE           reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    GROUP_BY        reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    HAVING          reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    ORDER_BY        reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    $end            reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    ON              reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    USING           reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    OPERATOR        reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    PLUS_MINUS      reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    SET_OPERATOR    reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    AND             reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    OR              reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    STAR            reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    AS              reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    ASC             reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    DESC            reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    BETWEEN         reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    IDENTIFIER      reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    CAST            reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    PARENT_R        reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    END             reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    WHEN            reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    THEN            reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)
    ELSE            reduce using rule 60 (expr_plus_minus -> PLUS_MINUS expr .)

  ! OPERATOR        [ shift and go to state 89 ]
  ! PLUS_MINUS      [ shift and go to state 83 ]
  ! SET_OPERATOR    [ shift and go to state 84 ]
  ! AND             [ shift and go to state 79 ]
  ! OR              [ shift and go to state 91 ]
  ! STAR            [ shift and go to state 81 ]
  ! AS              [ shift and go to state 87 ]
  ! ASC             [ shift and go to state 86 ]
  ! DESC            [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 88 ]
  ! IDENTIFIER      [ shift and go to state 36 ]
  ! CAST            [ shift and go to state 35 ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 75

    (48) expr_parent -> PARENT_L empty . PARENT_R

    PARENT_R        shift and go to state 104


state 76

    (47) expr_parent -> PARENT_L expr_comma . PARENT_R
    (49) expr_comma -> expr_comma . COMMA expr

    PARENT_R        shift and go to state 105
    COMMA           shift and go to state 94


state 77

    (45) expr_function -> expr_identifier expr_parent .

    COMMA           reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    WITH            reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    SELECT          reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    FROM            reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    JOIN_OPERATOR   reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    WHERE           reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    GROUP_BY        reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    HAVING          reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    ORDER_BY        reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    $end            reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    ON              reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    USING           reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    OPERATOR        reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    PLUS_MINUS      reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    SET_OPERATOR    reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    AND             reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    OR              reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    STAR            reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    AS              reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    ASC             reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    DESC            reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    BETWEEN         reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    IDENTIFIER      reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    CAST            reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    PARENT_R        reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    END             reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    WHEN            reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    THEN            reduce using rule 45 (expr_function -> expr_identifier expr_parent .)
    ELSE            reduce using rule 45 (expr_function -> expr_identifier expr_parent .)


state 78

    (62) expr_identifier -> expr_identifier DOT . IDENTIFIER
    (63) expr_identifier -> expr_identifier DOT . STAR

    IDENTIFIER      shift and go to state 106
    STAR            shift and go to state 107


state 79

    (54) expr_binary -> expr AND . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 108
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 80

    (24) clause_join -> JOIN_OPERATOR expr ON . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 109
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 81

    (56) expr_binary -> expr STAR . expr
    (65) expr_identifier -> STAR .
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    DOT             reduce using rule 65 (expr_identifier -> STAR .)
    PARENT_L        reduce using rule 65 (expr_identifier -> STAR .)
    AS              reduce using rule 65 (expr_identifier -> STAR .)
    OPERATOR        reduce using rule 65 (expr_identifier -> STAR .)
    SET_OPERATOR    reduce using rule 65 (expr_identifier -> STAR .)
    AND             reduce using rule 65 (expr_identifier -> STAR .)
    OR              reduce using rule 65 (expr_identifier -> STAR .)
    STAR            reduce using rule 65 (expr_identifier -> STAR .)
    ASC             reduce using rule 65 (expr_identifier -> STAR .)
    DESC            reduce using rule 65 (expr_identifier -> STAR .)
    BETWEEN         reduce using rule 65 (expr_identifier -> STAR .)
    CAST            reduce using rule 65 (expr_identifier -> STAR .)
    COMMA           reduce using rule 65 (expr_identifier -> STAR .)
    WITH            reduce using rule 65 (expr_identifier -> STAR .)
    SELECT          reduce using rule 65 (expr_identifier -> STAR .)
    FROM            reduce using rule 65 (expr_identifier -> STAR .)
    JOIN_OPERATOR   reduce using rule 65 (expr_identifier -> STAR .)
    WHERE           reduce using rule 65 (expr_identifier -> STAR .)
    GROUP_BY        reduce using rule 65 (expr_identifier -> STAR .)
    HAVING          reduce using rule 65 (expr_identifier -> STAR .)
    ORDER_BY        reduce using rule 65 (expr_identifier -> STAR .)
    $end            reduce using rule 65 (expr_identifier -> STAR .)
    ON              reduce using rule 65 (expr_identifier -> STAR .)
    USING           reduce using rule 65 (expr_identifier -> STAR .)
    PARENT_R        reduce using rule 65 (expr_identifier -> STAR .)
    END             reduce using rule 65 (expr_identifier -> STAR .)
    WHEN            reduce using rule 65 (expr_identifier -> STAR .)
    THEN            reduce using rule 65 (expr_identifier -> STAR .)
    ELSE            reduce using rule 65 (expr_identifier -> STAR .)
    CASE            shift and go to state 31
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39

  ! PLUS_MINUS      [ reduce using rule 65 (expr_identifier -> STAR .) ]
  ! IDENTIFIER      [ reduce using rule 65 (expr_identifier -> STAR .) ]
  ! CAST            [ shift and go to state 35 ]
  ! PARENT_L        [ shift and go to state 44 ]
  ! STAR            [ shift and go to state 24 ]
  ! WITH            [ shift and go to state 8 ]
  ! SELECT          [ shift and go to state 9 ]
  ! FROM            [ shift and go to state 19 ]
  ! JOIN_OPERATOR   [ shift and go to state 2 ]
  ! WHERE           [ shift and go to state 10 ]
  ! GROUP_BY        [ shift and go to state 21 ]
  ! HAVING          [ shift and go to state 22 ]
  ! ORDER_BY        [ shift and go to state 7 ]

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 110
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 82

    (34) expr_alias -> expr expr_identifier .
    (62) expr_identifier -> expr_identifier . DOT IDENTIFIER
    (63) expr_identifier -> expr_identifier . DOT STAR
    (45) expr_function -> expr_identifier . expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R

    COMMA           reduce using rule 34 (expr_alias -> expr expr_identifier .)
    WITH            reduce using rule 34 (expr_alias -> expr expr_identifier .)
    SELECT          reduce using rule 34 (expr_alias -> expr expr_identifier .)
    FROM            reduce using rule 34 (expr_alias -> expr expr_identifier .)
    JOIN_OPERATOR   reduce using rule 34 (expr_alias -> expr expr_identifier .)
    WHERE           reduce using rule 34 (expr_alias -> expr expr_identifier .)
    GROUP_BY        reduce using rule 34 (expr_alias -> expr expr_identifier .)
    HAVING          reduce using rule 34 (expr_alias -> expr expr_identifier .)
    ORDER_BY        reduce using rule 34 (expr_alias -> expr expr_identifier .)
    $end            reduce using rule 34 (expr_alias -> expr expr_identifier .)
    ON              reduce using rule 34 (expr_alias -> expr expr_identifier .)
    USING           reduce using rule 34 (expr_alias -> expr expr_identifier .)
    OPERATOR        reduce using rule 34 (expr_alias -> expr expr_identifier .)
    PLUS_MINUS      reduce using rule 34 (expr_alias -> expr expr_identifier .)
    SET_OPERATOR    reduce using rule 34 (expr_alias -> expr expr_identifier .)
    AND             reduce using rule 34 (expr_alias -> expr expr_identifier .)
    OR              reduce using rule 34 (expr_alias -> expr expr_identifier .)
    STAR            reduce using rule 34 (expr_alias -> expr expr_identifier .)
    AS              reduce using rule 34 (expr_alias -> expr expr_identifier .)
    ASC             reduce using rule 34 (expr_alias -> expr expr_identifier .)
    DESC            reduce using rule 34 (expr_alias -> expr expr_identifier .)
    BETWEEN         reduce using rule 34 (expr_alias -> expr expr_identifier .)
    IDENTIFIER      reduce using rule 34 (expr_alias -> expr expr_identifier .)
    CAST            reduce using rule 34 (expr_alias -> expr expr_identifier .)
    PARENT_R        reduce using rule 34 (expr_alias -> expr expr_identifier .)
    END             reduce using rule 34 (expr_alias -> expr expr_identifier .)
    WHEN            reduce using rule 34 (expr_alias -> expr expr_identifier .)
    THEN            reduce using rule 34 (expr_alias -> expr expr_identifier .)
    ELSE            reduce using rule 34 (expr_alias -> expr expr_identifier .)
    DOT             shift and go to state 78
    PARENT_L        shift and go to state 44

    expr_parent                    shift and go to state 77

state 83

    (52) expr_binary -> expr PLUS_MINUS . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 111
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 84

    (53) expr_binary -> expr SET_OPERATOR . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 112
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 85

    (35) expr_alias -> expr expr_function .

    COMMA           reduce using rule 35 (expr_alias -> expr expr_function .)
    WITH            reduce using rule 35 (expr_alias -> expr expr_function .)
    SELECT          reduce using rule 35 (expr_alias -> expr expr_function .)
    FROM            reduce using rule 35 (expr_alias -> expr expr_function .)
    JOIN_OPERATOR   reduce using rule 35 (expr_alias -> expr expr_function .)
    WHERE           reduce using rule 35 (expr_alias -> expr expr_function .)
    GROUP_BY        reduce using rule 35 (expr_alias -> expr expr_function .)
    HAVING          reduce using rule 35 (expr_alias -> expr expr_function .)
    ORDER_BY        reduce using rule 35 (expr_alias -> expr expr_function .)
    $end            reduce using rule 35 (expr_alias -> expr expr_function .)
    ON              reduce using rule 35 (expr_alias -> expr expr_function .)
    USING           reduce using rule 35 (expr_alias -> expr expr_function .)
    OPERATOR        reduce using rule 35 (expr_alias -> expr expr_function .)
    PLUS_MINUS      reduce using rule 35 (expr_alias -> expr expr_function .)
    SET_OPERATOR    reduce using rule 35 (expr_alias -> expr expr_function .)
    AND             reduce using rule 35 (expr_alias -> expr expr_function .)
    OR              reduce using rule 35 (expr_alias -> expr expr_function .)
    STAR            reduce using rule 35 (expr_alias -> expr expr_function .)
    AS              reduce using rule 35 (expr_alias -> expr expr_function .)
    ASC             reduce using rule 35 (expr_alias -> expr expr_function .)
    DESC            reduce using rule 35 (expr_alias -> expr expr_function .)
    BETWEEN         reduce using rule 35 (expr_alias -> expr expr_function .)
    IDENTIFIER      reduce using rule 35 (expr_alias -> expr expr_function .)
    CAST            reduce using rule 35 (expr_alias -> expr expr_function .)
    PARENT_R        reduce using rule 35 (expr_alias -> expr expr_function .)
    END             reduce using rule 35 (expr_alias -> expr expr_function .)
    WHEN            reduce using rule 35 (expr_alias -> expr expr_function .)
    THEN            reduce using rule 35 (expr_alias -> expr expr_function .)
    ELSE            reduce using rule 35 (expr_alias -> expr expr_function .)


state 86

    (58) expr_order -> expr ASC .

    AS              reduce using rule 58 (expr_order -> expr ASC .)
    OPERATOR        reduce using rule 58 (expr_order -> expr ASC .)
    PLUS_MINUS      reduce using rule 58 (expr_order -> expr ASC .)
    SET_OPERATOR    reduce using rule 58 (expr_order -> expr ASC .)
    AND             reduce using rule 58 (expr_order -> expr ASC .)
    OR              reduce using rule 58 (expr_order -> expr ASC .)
    STAR            reduce using rule 58 (expr_order -> expr ASC .)
    ASC             reduce using rule 58 (expr_order -> expr ASC .)
    DESC            reduce using rule 58 (expr_order -> expr ASC .)
    BETWEEN         reduce using rule 58 (expr_order -> expr ASC .)
    IDENTIFIER      reduce using rule 58 (expr_order -> expr ASC .)
    CAST            reduce using rule 58 (expr_order -> expr ASC .)
    COMMA           reduce using rule 58 (expr_order -> expr ASC .)
    WITH            reduce using rule 58 (expr_order -> expr ASC .)
    SELECT          reduce using rule 58 (expr_order -> expr ASC .)
    FROM            reduce using rule 58 (expr_order -> expr ASC .)
    JOIN_OPERATOR   reduce using rule 58 (expr_order -> expr ASC .)
    WHERE           reduce using rule 58 (expr_order -> expr ASC .)
    GROUP_BY        reduce using rule 58 (expr_order -> expr ASC .)
    HAVING          reduce using rule 58 (expr_order -> expr ASC .)
    ORDER_BY        reduce using rule 58 (expr_order -> expr ASC .)
    $end            reduce using rule 58 (expr_order -> expr ASC .)
    ON              reduce using rule 58 (expr_order -> expr ASC .)
    USING           reduce using rule 58 (expr_order -> expr ASC .)
    PARENT_R        reduce using rule 58 (expr_order -> expr ASC .)
    END             reduce using rule 58 (expr_order -> expr ASC .)
    WHEN            reduce using rule 58 (expr_order -> expr ASC .)
    THEN            reduce using rule 58 (expr_order -> expr ASC .)
    ELSE            reduce using rule 58 (expr_order -> expr ASC .)


state 87

    (36) expr_as -> expr AS . expr
    (37) expr_as -> expr AS . expr_identifier
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 113
    expr                           shift and go to state 114
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 88

    (57) expr_between -> expr BETWEEN . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 115
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 89

    (51) expr_binary -> expr OPERATOR . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 116
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 90

    (25) clause_join -> JOIN_OPERATOR expr USING . expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R

    PARENT_L        shift and go to state 44

    expr_parent                    shift and go to state 117

state 91

    (55) expr_binary -> expr OR . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 118
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 92

    (59) expr_order -> expr DESC .

    AS              reduce using rule 59 (expr_order -> expr DESC .)
    OPERATOR        reduce using rule 59 (expr_order -> expr DESC .)
    PLUS_MINUS      reduce using rule 59 (expr_order -> expr DESC .)
    SET_OPERATOR    reduce using rule 59 (expr_order -> expr DESC .)
    AND             reduce using rule 59 (expr_order -> expr DESC .)
    OR              reduce using rule 59 (expr_order -> expr DESC .)
    STAR            reduce using rule 59 (expr_order -> expr DESC .)
    ASC             reduce using rule 59 (expr_order -> expr DESC .)
    DESC            reduce using rule 59 (expr_order -> expr DESC .)
    BETWEEN         reduce using rule 59 (expr_order -> expr DESC .)
    IDENTIFIER      reduce using rule 59 (expr_order -> expr DESC .)
    CAST            reduce using rule 59 (expr_order -> expr DESC .)
    COMMA           reduce using rule 59 (expr_order -> expr DESC .)
    WITH            reduce using rule 59 (expr_order -> expr DESC .)
    SELECT          reduce using rule 59 (expr_order -> expr DESC .)
    FROM            reduce using rule 59 (expr_order -> expr DESC .)
    JOIN_OPERATOR   reduce using rule 59 (expr_order -> expr DESC .)
    WHERE           reduce using rule 59 (expr_order -> expr DESC .)
    GROUP_BY        reduce using rule 59 (expr_order -> expr DESC .)
    HAVING          reduce using rule 59 (expr_order -> expr DESC .)
    ORDER_BY        reduce using rule 59 (expr_order -> expr DESC .)
    $end            reduce using rule 59 (expr_order -> expr DESC .)
    ON              reduce using rule 59 (expr_order -> expr DESC .)
    USING           reduce using rule 59 (expr_order -> expr DESC .)
    PARENT_R        reduce using rule 59 (expr_order -> expr DESC .)
    END             reduce using rule 59 (expr_order -> expr DESC .)
    WHEN            reduce using rule 59 (expr_order -> expr DESC .)
    THEN            reduce using rule 59 (expr_order -> expr DESC .)
    ELSE            reduce using rule 59 (expr_order -> expr DESC .)


state 93

    (61) expr_not -> NOT expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    COMMA           reduce using rule 61 (expr_not -> NOT expr .)
    WITH            reduce using rule 61 (expr_not -> NOT expr .)
    SELECT          reduce using rule 61 (expr_not -> NOT expr .)
    FROM            reduce using rule 61 (expr_not -> NOT expr .)
    JOIN_OPERATOR   reduce using rule 61 (expr_not -> NOT expr .)
    WHERE           reduce using rule 61 (expr_not -> NOT expr .)
    GROUP_BY        reduce using rule 61 (expr_not -> NOT expr .)
    HAVING          reduce using rule 61 (expr_not -> NOT expr .)
    ORDER_BY        reduce using rule 61 (expr_not -> NOT expr .)
    $end            reduce using rule 61 (expr_not -> NOT expr .)
    ON              reduce using rule 61 (expr_not -> NOT expr .)
    USING           reduce using rule 61 (expr_not -> NOT expr .)
    SET_OPERATOR    reduce using rule 61 (expr_not -> NOT expr .)
    AND             reduce using rule 61 (expr_not -> NOT expr .)
    OR              reduce using rule 61 (expr_not -> NOT expr .)
    AS              reduce using rule 61 (expr_not -> NOT expr .)
    ASC             reduce using rule 61 (expr_not -> NOT expr .)
    DESC            reduce using rule 61 (expr_not -> NOT expr .)
    BETWEEN         reduce using rule 61 (expr_not -> NOT expr .)
    CAST            reduce using rule 61 (expr_not -> NOT expr .)
    PARENT_R        reduce using rule 61 (expr_not -> NOT expr .)
    END             reduce using rule 61 (expr_not -> NOT expr .)
    WHEN            reduce using rule 61 (expr_not -> NOT expr .)
    THEN            reduce using rule 61 (expr_not -> NOT expr .)
    ELSE            reduce using rule 61 (expr_not -> NOT expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    STAR            shift and go to state 81
    IDENTIFIER      shift and go to state 36

  ! OPERATOR        [ reduce using rule 61 (expr_not -> NOT expr .) ]
  ! PLUS_MINUS      [ reduce using rule 61 (expr_not -> NOT expr .) ]
  ! STAR            [ reduce using rule 61 (expr_not -> NOT expr .) ]
  ! IDENTIFIER      [ reduce using rule 61 (expr_not -> NOT expr .) ]
  ! SET_OPERATOR    [ shift and go to state 84 ]
  ! AND             [ shift and go to state 79 ]
  ! OR              [ shift and go to state 91 ]
  ! AS              [ shift and go to state 87 ]
  ! ASC             [ shift and go to state 86 ]
  ! DESC            [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 88 ]
  ! CAST            [ shift and go to state 35 ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 94

    (49) expr_comma -> expr_comma COMMA . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 119
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 95

    (22) clause_select -> SELECT expr_select_modifier expr_comma .
    (49) expr_comma -> expr_comma . COMMA expr

  ! shift/reduce conflict for COMMA resolved as shift
    WITH            reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    SELECT          reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    FROM            reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    JOIN_OPERATOR   reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    WHERE           reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    GROUP_BY        reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    HAVING          reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    ORDER_BY        reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    OPERATOR        reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    PLUS_MINUS      reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    SET_OPERATOR    reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    AND             reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    OR              reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    STAR            reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    AS              reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    ASC             reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    DESC            reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    BETWEEN         reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    IDENTIFIER      reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    CAST            reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    PARENT_R        reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    END             reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    WHEN            reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    THEN            reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    ELSE            reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    $end            reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    ON              reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    USING           reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .)
    COMMA           shift and go to state 94

  ! COMMA           [ reduce using rule 22 (clause_select -> SELECT expr_select_modifier expr_comma .) ]


state 96

    (6) create_table -> CREATE_TABLE expr_identifier expr_parent .

    $end            reduce using rule 6 (create_table -> CREATE_TABLE expr_identifier expr_parent .)


state 97

    (38) expr_case -> CASE expr_conditions END .

    OPERATOR        reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    PLUS_MINUS      reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    SET_OPERATOR    reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    AND             reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    OR              reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    STAR            reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    AS              reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    ASC             reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    DESC            reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    BETWEEN         reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    IDENTIFIER      reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    CAST            reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    END             reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    WHEN            reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    THEN            reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    ELSE            reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    COMMA           reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    WITH            reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    SELECT          reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    FROM            reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    JOIN_OPERATOR   reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    WHERE           reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    GROUP_BY        reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    HAVING          reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    ORDER_BY        reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    $end            reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    ON              reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    USING           reduce using rule 38 (expr_case -> CASE expr_conditions END .)
    PARENT_R        reduce using rule 38 (expr_case -> CASE expr_conditions END .)


state 98

    (40) expr_conditions -> expr_conditions THEN . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 120
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 99

    (39) expr_conditions -> expr_conditions WHEN . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 121
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 100

    (41) expr_conditions -> expr_conditions ELSE . expr
    (66) expr -> . select
    (67) expr -> . expr_case
    (68) expr -> . expr_function
    (69) expr -> . expr_parent
    (70) expr -> . expr_binary
    (71) expr -> . expr_alias
    (72) expr -> . expr_as
    (73) expr -> . expr_order
    (74) expr -> . expr_plus_minus
    (75) expr -> . expr_not
    (76) expr -> . expr_between
    (77) expr -> . expr_identifier
    (78) expr -> . term_literal
    (79) expr -> . analytic_function
    (8) select -> . select clause
    (9) select -> . clause
    (38) expr_case -> . CASE expr_conditions END
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R
    (51) expr_binary -> . expr OPERATOR expr
    (52) expr_binary -> . expr PLUS_MINUS expr
    (53) expr_binary -> . expr SET_OPERATOR expr
    (54) expr_binary -> . expr AND expr
    (55) expr_binary -> . expr OR expr
    (56) expr_binary -> . expr STAR expr
    (34) expr_alias -> . expr expr_identifier
    (35) expr_alias -> . expr expr_function
    (36) expr_as -> . expr AS expr
    (37) expr_as -> . expr AS expr_identifier
    (58) expr_order -> . expr ASC
    (59) expr_order -> . expr DESC
    (60) expr_plus_minus -> . PLUS_MINUS expr
    (61) expr_not -> . NOT expr
    (57) expr_between -> . expr BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (80) term_literal -> . NUMBER
    (81) term_literal -> . STRING
    (82) term_literal -> . NULL
    (10) analytic_function -> . analytic_function clause
    (11) analytic_function -> . clause_partition_by
    (13) clause -> . clause_with
    (14) clause -> . clause_select
    (15) clause -> . clause_from
    (16) clause -> . clause_join
    (17) clause -> . clause_where
    (18) clause -> . clause_group_by
    (19) clause -> . clause_having
    (20) clause -> . clause_order_by
    (12) clause_partition_by -> . PARTITION_BY expr
    (21) clause_with -> . WITH expr_comma
    (22) clause_select -> . SELECT expr_select_modifier expr_comma
    (23) clause_from -> . FROM expr_comma
    (24) clause_join -> . JOIN_OPERATOR expr ON expr
    (25) clause_join -> . JOIN_OPERATOR expr USING expr_parent
    (26) clause_where -> . WHERE expr
    (27) clause_group_by -> . GROUP_BY expr_comma
    (28) clause_having -> . HAVING expr
    (29) clause_order_by -> . ORDER_BY expr_comma

    CASE            shift and go to state 31
    CAST            shift and go to state 35
    PARENT_L        shift and go to state 44
    PLUS_MINUS      shift and go to state 41
    NOT             shift and go to state 49
    IDENTIFIER      shift and go to state 36
    STAR            shift and go to state 24
    NUMBER          shift and go to state 40
    STRING          shift and go to state 38
    NULL            shift and go to state 28
    PARTITION_BY    shift and go to state 39
    WITH            shift and go to state 8
    SELECT          shift and go to state 9
    FROM            shift and go to state 19
    JOIN_OPERATOR   shift and go to state 2
    WHERE           shift and go to state 10
    GROUP_BY        shift and go to state 21
    HAVING          shift and go to state 22
    ORDER_BY        shift and go to state 7

    clause_group_by                shift and go to state 16
    clause                         shift and go to state 1
    clause_having                  shift and go to state 15
    expr_function                  shift and go to state 25
    expr_as                        shift and go to state 26
    clause_where                   shift and go to state 5
    clause_order_by                shift and go to state 6
    expr_between                   shift and go to state 37
    expr_plus_minus                shift and go to state 29
    select                         shift and go to state 30
    expr_parent                    shift and go to state 32
    expr_not                       shift and go to state 33
    analytic_function              shift and go to state 34
    clause_from                    shift and go to state 14
    expr_binary                    shift and go to state 27
    clause_join                    shift and go to state 3
    expr_case                      shift and go to state 42
    expr_alias                     shift and go to state 43
    clause_select                  shift and go to state 17
    expr_order                     shift and go to state 45
    clause_with                    shift and go to state 18
    expr_identifier                shift and go to state 46
    expr                           shift and go to state 122
    term_literal                   shift and go to state 48
    clause_partition_by            shift and go to state 50

state 101

    (43) expr_conditions -> THEN expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    END             reduce using rule 43 (expr_conditions -> THEN expr .)
    WHEN            reduce using rule 43 (expr_conditions -> THEN expr .)
    THEN            reduce using rule 43 (expr_conditions -> THEN expr .)
    ELSE            reduce using rule 43 (expr_conditions -> THEN expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 102

    (42) expr_conditions -> WHEN expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    END             reduce using rule 42 (expr_conditions -> WHEN expr .)
    WHEN            reduce using rule 42 (expr_conditions -> WHEN expr .)
    THEN            reduce using rule 42 (expr_conditions -> WHEN expr .)
    ELSE            reduce using rule 42 (expr_conditions -> WHEN expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 103

    (44) expr_conditions -> ELSE expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    END             reduce using rule 44 (expr_conditions -> ELSE expr .)
    WHEN            reduce using rule 44 (expr_conditions -> ELSE expr .)
    THEN            reduce using rule 44 (expr_conditions -> ELSE expr .)
    ELSE            reduce using rule 44 (expr_conditions -> ELSE expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 104

    (48) expr_parent -> PARENT_L empty PARENT_R .

    WITH            reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    SELECT          reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    FROM            reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    JOIN_OPERATOR   reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    WHERE           reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    GROUP_BY        reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    HAVING          reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    ORDER_BY        reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    $end            reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    ON              reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    USING           reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    OPERATOR        reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    PLUS_MINUS      reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    SET_OPERATOR    reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    AND             reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    OR              reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    STAR            reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    AS              reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    ASC             reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    DESC            reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    BETWEEN         reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    IDENTIFIER      reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    CAST            reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    COMMA           reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    PARENT_R        reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    END             reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    WHEN            reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    THEN            reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)
    ELSE            reduce using rule 48 (expr_parent -> PARENT_L empty PARENT_R .)


state 105

    (47) expr_parent -> PARENT_L expr_comma PARENT_R .

    WITH            reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    SELECT          reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    FROM            reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    JOIN_OPERATOR   reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    WHERE           reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    GROUP_BY        reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    HAVING          reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    ORDER_BY        reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    $end            reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    ON              reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    USING           reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    OPERATOR        reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    PLUS_MINUS      reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    SET_OPERATOR    reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    AND             reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    OR              reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    STAR            reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    AS              reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    ASC             reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    DESC            reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    BETWEEN         reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    IDENTIFIER      reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    CAST            reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    COMMA           reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    PARENT_R        reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    END             reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    WHEN            reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    THEN            reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)
    ELSE            reduce using rule 47 (expr_parent -> PARENT_L expr_comma PARENT_R .)


state 106

    (62) expr_identifier -> expr_identifier DOT IDENTIFIER .

    DOT             reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    PARENT_L        reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    OPERATOR        reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    PLUS_MINUS      reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    SET_OPERATOR    reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    AND             reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    OR              reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    STAR            reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    AS              reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    ASC             reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    DESC            reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    BETWEEN         reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    IDENTIFIER      reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    CAST            reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    END             reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    WHEN            reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    THEN            reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    ELSE            reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    COMMA           reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    WITH            reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    SELECT          reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    FROM            reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    JOIN_OPERATOR   reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    WHERE           reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    GROUP_BY        reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    HAVING          reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    ORDER_BY        reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    $end            reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    ON              reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    USING           reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)
    PARENT_R        reduce using rule 62 (expr_identifier -> expr_identifier DOT IDENTIFIER .)


state 107

    (63) expr_identifier -> expr_identifier DOT STAR .

    DOT             reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    PARENT_L        reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    OPERATOR        reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    PLUS_MINUS      reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    SET_OPERATOR    reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    AND             reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    OR              reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    STAR            reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    AS              reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    ASC             reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    DESC            reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    BETWEEN         reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    IDENTIFIER      reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    CAST            reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    END             reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    WHEN            reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    THEN            reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    ELSE            reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    COMMA           reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    WITH            reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    SELECT          reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    FROM            reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    JOIN_OPERATOR   reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    WHERE           reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    GROUP_BY        reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    HAVING          reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    ORDER_BY        reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    $end            reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    ON              reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    USING           reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)
    PARENT_R        reduce using rule 63 (expr_identifier -> expr_identifier DOT STAR .)


state 108

    (54) expr_binary -> expr AND expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    COMMA           reduce using rule 54 (expr_binary -> expr AND expr .)
    WITH            reduce using rule 54 (expr_binary -> expr AND expr .)
    SELECT          reduce using rule 54 (expr_binary -> expr AND expr .)
    FROM            reduce using rule 54 (expr_binary -> expr AND expr .)
    JOIN_OPERATOR   reduce using rule 54 (expr_binary -> expr AND expr .)
    WHERE           reduce using rule 54 (expr_binary -> expr AND expr .)
    GROUP_BY        reduce using rule 54 (expr_binary -> expr AND expr .)
    HAVING          reduce using rule 54 (expr_binary -> expr AND expr .)
    ORDER_BY        reduce using rule 54 (expr_binary -> expr AND expr .)
    $end            reduce using rule 54 (expr_binary -> expr AND expr .)
    ON              reduce using rule 54 (expr_binary -> expr AND expr .)
    USING           reduce using rule 54 (expr_binary -> expr AND expr .)
    SET_OPERATOR    reduce using rule 54 (expr_binary -> expr AND expr .)
    AND             reduce using rule 54 (expr_binary -> expr AND expr .)
    OR              reduce using rule 54 (expr_binary -> expr AND expr .)
    AS              reduce using rule 54 (expr_binary -> expr AND expr .)
    ASC             reduce using rule 54 (expr_binary -> expr AND expr .)
    DESC            reduce using rule 54 (expr_binary -> expr AND expr .)
    BETWEEN         reduce using rule 54 (expr_binary -> expr AND expr .)
    CAST            reduce using rule 54 (expr_binary -> expr AND expr .)
    PARENT_R        reduce using rule 54 (expr_binary -> expr AND expr .)
    END             reduce using rule 54 (expr_binary -> expr AND expr .)
    WHEN            reduce using rule 54 (expr_binary -> expr AND expr .)
    THEN            reduce using rule 54 (expr_binary -> expr AND expr .)
    ELSE            reduce using rule 54 (expr_binary -> expr AND expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    STAR            shift and go to state 81
    IDENTIFIER      shift and go to state 36

  ! OPERATOR        [ reduce using rule 54 (expr_binary -> expr AND expr .) ]
  ! PLUS_MINUS      [ reduce using rule 54 (expr_binary -> expr AND expr .) ]
  ! STAR            [ reduce using rule 54 (expr_binary -> expr AND expr .) ]
  ! IDENTIFIER      [ reduce using rule 54 (expr_binary -> expr AND expr .) ]
  ! SET_OPERATOR    [ shift and go to state 84 ]
  ! AND             [ shift and go to state 79 ]
  ! OR              [ shift and go to state 91 ]
  ! AS              [ shift and go to state 87 ]
  ! ASC             [ shift and go to state 86 ]
  ! DESC            [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 88 ]
  ! CAST            [ shift and go to state 35 ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 109

    (24) clause_join -> JOIN_OPERATOR expr ON expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

  ! shift/reduce conflict for OPERATOR resolved as shift
  ! shift/reduce conflict for PLUS_MINUS resolved as shift
  ! shift/reduce conflict for SET_OPERATOR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
    WITH            reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    SELECT          reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    FROM            reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    JOIN_OPERATOR   reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    WHERE           reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    GROUP_BY        reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    HAVING          reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    ORDER_BY        reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    END             reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    WHEN            reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    THEN            reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    ELSE            reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    COMMA           reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    $end            reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    ON              reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    USING           reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    PARENT_R        reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

  ! OPERATOR        [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! PLUS_MINUS      [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! SET_OPERATOR    [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! AND             [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! OR              [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! STAR            [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! AS              [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! ASC             [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! DESC            [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! BETWEEN         [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! IDENTIFIER      [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]
  ! CAST            [ reduce using rule 24 (clause_join -> JOIN_OPERATOR expr ON expr .) ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 110

    (56) expr_binary -> expr STAR expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    COMMA           reduce using rule 56 (expr_binary -> expr STAR expr .)
    WITH            reduce using rule 56 (expr_binary -> expr STAR expr .)
    SELECT          reduce using rule 56 (expr_binary -> expr STAR expr .)
    FROM            reduce using rule 56 (expr_binary -> expr STAR expr .)
    JOIN_OPERATOR   reduce using rule 56 (expr_binary -> expr STAR expr .)
    WHERE           reduce using rule 56 (expr_binary -> expr STAR expr .)
    GROUP_BY        reduce using rule 56 (expr_binary -> expr STAR expr .)
    HAVING          reduce using rule 56 (expr_binary -> expr STAR expr .)
    ORDER_BY        reduce using rule 56 (expr_binary -> expr STAR expr .)
    $end            reduce using rule 56 (expr_binary -> expr STAR expr .)
    ON              reduce using rule 56 (expr_binary -> expr STAR expr .)
    USING           reduce using rule 56 (expr_binary -> expr STAR expr .)
    OPERATOR        reduce using rule 56 (expr_binary -> expr STAR expr .)
    SET_OPERATOR    reduce using rule 56 (expr_binary -> expr STAR expr .)
    AND             reduce using rule 56 (expr_binary -> expr STAR expr .)
    OR              reduce using rule 56 (expr_binary -> expr STAR expr .)
    STAR            reduce using rule 56 (expr_binary -> expr STAR expr .)
    AS              reduce using rule 56 (expr_binary -> expr STAR expr .)
    ASC             reduce using rule 56 (expr_binary -> expr STAR expr .)
    DESC            reduce using rule 56 (expr_binary -> expr STAR expr .)
    BETWEEN         reduce using rule 56 (expr_binary -> expr STAR expr .)
    CAST            reduce using rule 56 (expr_binary -> expr STAR expr .)
    PARENT_R        reduce using rule 56 (expr_binary -> expr STAR expr .)
    END             reduce using rule 56 (expr_binary -> expr STAR expr .)
    WHEN            reduce using rule 56 (expr_binary -> expr STAR expr .)
    THEN            reduce using rule 56 (expr_binary -> expr STAR expr .)
    ELSE            reduce using rule 56 (expr_binary -> expr STAR expr .)
    PLUS_MINUS      shift and go to state 83
    IDENTIFIER      shift and go to state 36

  ! PLUS_MINUS      [ reduce using rule 56 (expr_binary -> expr STAR expr .) ]
  ! IDENTIFIER      [ reduce using rule 56 (expr_binary -> expr STAR expr .) ]
  ! OPERATOR        [ shift and go to state 89 ]
  ! SET_OPERATOR    [ shift and go to state 84 ]
  ! AND             [ shift and go to state 79 ]
  ! OR              [ shift and go to state 91 ]
  ! STAR            [ shift and go to state 81 ]
  ! AS              [ shift and go to state 87 ]
  ! ASC             [ shift and go to state 86 ]
  ! DESC            [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 88 ]
  ! CAST            [ shift and go to state 35 ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 111

    (52) expr_binary -> expr PLUS_MINUS expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    COMMA           reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    WITH            reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    SELECT          reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    FROM            reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    JOIN_OPERATOR   reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    WHERE           reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    GROUP_BY        reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    HAVING          reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    ORDER_BY        reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    $end            reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    ON              reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    USING           reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    OPERATOR        reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    PLUS_MINUS      reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    SET_OPERATOR    reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    AND             reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    OR              reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    STAR            reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    AS              reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    ASC             reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    DESC            reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    BETWEEN         reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    IDENTIFIER      reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    CAST            reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    PARENT_R        reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    END             reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    WHEN            reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    THEN            reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)
    ELSE            reduce using rule 52 (expr_binary -> expr PLUS_MINUS expr .)

  ! OPERATOR        [ shift and go to state 89 ]
  ! PLUS_MINUS      [ shift and go to state 83 ]
  ! SET_OPERATOR    [ shift and go to state 84 ]
  ! AND             [ shift and go to state 79 ]
  ! OR              [ shift and go to state 91 ]
  ! STAR            [ shift and go to state 81 ]
  ! AS              [ shift and go to state 87 ]
  ! ASC             [ shift and go to state 86 ]
  ! DESC            [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 88 ]
  ! IDENTIFIER      [ shift and go to state 36 ]
  ! CAST            [ shift and go to state 35 ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 112

    (53) expr_binary -> expr SET_OPERATOR expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

  ! shift/reduce conflict for OPERATOR resolved as shift
  ! shift/reduce conflict for PLUS_MINUS resolved as shift
  ! shift/reduce conflict for SET_OPERATOR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
    COMMA           reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    WITH            reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    SELECT          reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    FROM            reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    JOIN_OPERATOR   reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    WHERE           reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    GROUP_BY        reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    HAVING          reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    ORDER_BY        reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    $end            reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    ON              reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    USING           reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    PARENT_R        reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    END             reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    WHEN            reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    THEN            reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    ELSE            reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

  ! OPERATOR        [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! PLUS_MINUS      [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! SET_OPERATOR    [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! AND             [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! OR              [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! STAR            [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! AS              [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! ASC             [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! DESC            [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! BETWEEN         [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! IDENTIFIER      [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]
  ! CAST            [ reduce using rule 53 (expr_binary -> expr SET_OPERATOR expr .) ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 113

    (37) expr_as -> expr AS expr_identifier .
    (77) expr -> expr_identifier .
    (62) expr_identifier -> expr_identifier . DOT IDENTIFIER
    (63) expr_identifier -> expr_identifier . DOT STAR
    (45) expr_function -> expr_identifier . expr_parent
    (47) expr_parent -> . PARENT_L expr_comma PARENT_R
    (48) expr_parent -> . PARENT_L empty PARENT_R

  ! reduce/reduce conflict for COMMA resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for WITH resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for SELECT resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for FROM resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for JOIN_OPERATOR resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for WHERE resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for GROUP_BY resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for HAVING resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for ORDER_BY resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for $end resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for ON resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for USING resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for OPERATOR resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for PLUS_MINUS resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for SET_OPERATOR resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for AND resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for OR resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for STAR resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for AS resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for ASC resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for DESC resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for BETWEEN resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for CAST resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for PARENT_R resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for END resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for WHEN resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for THEN resolved using rule 37 (expr_as -> expr AS expr_identifier .)
  ! reduce/reduce conflict for ELSE resolved using rule 37 (expr_as -> expr AS expr_identifier .)
    COMMA           reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    WITH            reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    SELECT          reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    FROM            reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    JOIN_OPERATOR   reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    WHERE           reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    GROUP_BY        reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    HAVING          reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    ORDER_BY        reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    $end            reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    ON              reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    USING           reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    OPERATOR        reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    PLUS_MINUS      reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    SET_OPERATOR    reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    AND             reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    OR              reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    STAR            reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    AS              reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    ASC             reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    DESC            reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    BETWEEN         reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    IDENTIFIER      reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    CAST            reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    PARENT_R        reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    END             reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    WHEN            reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    THEN            reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    ELSE            reduce using rule 37 (expr_as -> expr AS expr_identifier .)
    DOT             shift and go to state 78
    PARENT_L        shift and go to state 44

  ! COMMA           [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! WITH            [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! SELECT          [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! FROM            [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! JOIN_OPERATOR   [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! WHERE           [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! GROUP_BY        [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! HAVING          [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! ORDER_BY        [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! $end            [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! ON              [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! USING           [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! OPERATOR        [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! PLUS_MINUS      [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! SET_OPERATOR    [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! AND             [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! OR              [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! STAR            [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! AS              [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! ASC             [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! DESC            [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! BETWEEN         [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! IDENTIFIER      [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! CAST            [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! PARENT_R        [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! END             [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! WHEN            [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! THEN            [ reduce using rule 77 (expr -> expr_identifier .) ]
  ! ELSE            [ reduce using rule 77 (expr -> expr_identifier .) ]

    expr_parent                    shift and go to state 77

state 114

    (36) expr_as -> expr AS expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    COMMA           reduce using rule 36 (expr_as -> expr AS expr .)
    WITH            reduce using rule 36 (expr_as -> expr AS expr .)
    SELECT          reduce using rule 36 (expr_as -> expr AS expr .)
    FROM            reduce using rule 36 (expr_as -> expr AS expr .)
    JOIN_OPERATOR   reduce using rule 36 (expr_as -> expr AS expr .)
    WHERE           reduce using rule 36 (expr_as -> expr AS expr .)
    GROUP_BY        reduce using rule 36 (expr_as -> expr AS expr .)
    HAVING          reduce using rule 36 (expr_as -> expr AS expr .)
    ORDER_BY        reduce using rule 36 (expr_as -> expr AS expr .)
    $end            reduce using rule 36 (expr_as -> expr AS expr .)
    ON              reduce using rule 36 (expr_as -> expr AS expr .)
    USING           reduce using rule 36 (expr_as -> expr AS expr .)
    SET_OPERATOR    reduce using rule 36 (expr_as -> expr AS expr .)
    AS              reduce using rule 36 (expr_as -> expr AS expr .)
    ASC             reduce using rule 36 (expr_as -> expr AS expr .)
    DESC            reduce using rule 36 (expr_as -> expr AS expr .)
    BETWEEN         reduce using rule 36 (expr_as -> expr AS expr .)
    CAST            reduce using rule 36 (expr_as -> expr AS expr .)
    PARENT_R        reduce using rule 36 (expr_as -> expr AS expr .)
    END             reduce using rule 36 (expr_as -> expr AS expr .)
    WHEN            reduce using rule 36 (expr_as -> expr AS expr .)
    THEN            reduce using rule 36 (expr_as -> expr AS expr .)
    ELSE            reduce using rule 36 (expr_as -> expr AS expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    IDENTIFIER      shift and go to state 36

  ! OPERATOR        [ reduce using rule 36 (expr_as -> expr AS expr .) ]
  ! PLUS_MINUS      [ reduce using rule 36 (expr_as -> expr AS expr .) ]
  ! AND             [ reduce using rule 36 (expr_as -> expr AS expr .) ]
  ! OR              [ reduce using rule 36 (expr_as -> expr AS expr .) ]
  ! STAR            [ reduce using rule 36 (expr_as -> expr AS expr .) ]
  ! IDENTIFIER      [ reduce using rule 36 (expr_as -> expr AS expr .) ]
  ! SET_OPERATOR    [ shift and go to state 84 ]
  ! AS              [ shift and go to state 87 ]
  ! ASC             [ shift and go to state 86 ]
  ! DESC            [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 88 ]
  ! CAST            [ shift and go to state 35 ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 115

    (57) expr_between -> expr BETWEEN expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

  ! shift/reduce conflict for OPERATOR resolved as shift
  ! shift/reduce conflict for PLUS_MINUS resolved as shift
  ! shift/reduce conflict for SET_OPERATOR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
    COMMA           reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    WITH            reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    SELECT          reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    FROM            reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    JOIN_OPERATOR   reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    WHERE           reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    GROUP_BY        reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    HAVING          reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    ORDER_BY        reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    $end            reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    ON              reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    USING           reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    PARENT_R        reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    END             reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    WHEN            reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    THEN            reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    ELSE            reduce using rule 57 (expr_between -> expr BETWEEN expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

  ! OPERATOR        [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! PLUS_MINUS      [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! SET_OPERATOR    [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! AND             [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! OR              [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! STAR            [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! AS              [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! ASC             [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! DESC            [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! BETWEEN         [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! IDENTIFIER      [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]
  ! CAST            [ reduce using rule 57 (expr_between -> expr BETWEEN expr .) ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 116

    (51) expr_binary -> expr OPERATOR expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    COMMA           reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    WITH            reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    SELECT          reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    FROM            reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    JOIN_OPERATOR   reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    WHERE           reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    GROUP_BY        reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    HAVING          reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    ORDER_BY        reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    $end            reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    ON              reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    USING           reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    OPERATOR        reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    SET_OPERATOR    reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    AND             reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    OR              reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    STAR            reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    AS              reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    ASC             reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    DESC            reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    BETWEEN         reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    CAST            reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    PARENT_R        reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    END             reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    WHEN            reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    THEN            reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    ELSE            reduce using rule 51 (expr_binary -> expr OPERATOR expr .)
    PLUS_MINUS      shift and go to state 83
    IDENTIFIER      shift and go to state 36

  ! PLUS_MINUS      [ reduce using rule 51 (expr_binary -> expr OPERATOR expr .) ]
  ! IDENTIFIER      [ reduce using rule 51 (expr_binary -> expr OPERATOR expr .) ]
  ! OPERATOR        [ shift and go to state 89 ]
  ! SET_OPERATOR    [ shift and go to state 84 ]
  ! AND             [ shift and go to state 79 ]
  ! OR              [ shift and go to state 91 ]
  ! STAR            [ shift and go to state 81 ]
  ! AS              [ shift and go to state 87 ]
  ! ASC             [ shift and go to state 86 ]
  ! DESC            [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 88 ]
  ! CAST            [ shift and go to state 35 ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 117

    (25) clause_join -> JOIN_OPERATOR expr USING expr_parent .

    WITH            reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    SELECT          reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    FROM            reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    JOIN_OPERATOR   reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    WHERE           reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    GROUP_BY        reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    HAVING          reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    ORDER_BY        reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    OPERATOR        reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    PLUS_MINUS      reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    SET_OPERATOR    reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    AND             reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    OR              reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    STAR            reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    AS              reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    ASC             reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    DESC            reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    BETWEEN         reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    IDENTIFIER      reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    CAST            reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    END             reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    WHEN            reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    THEN            reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    ELSE            reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    COMMA           reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    $end            reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    ON              reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    USING           reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)
    PARENT_R        reduce using rule 25 (clause_join -> JOIN_OPERATOR expr USING expr_parent .)


state 118

    (55) expr_binary -> expr OR expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    COMMA           reduce using rule 55 (expr_binary -> expr OR expr .)
    WITH            reduce using rule 55 (expr_binary -> expr OR expr .)
    SELECT          reduce using rule 55 (expr_binary -> expr OR expr .)
    FROM            reduce using rule 55 (expr_binary -> expr OR expr .)
    JOIN_OPERATOR   reduce using rule 55 (expr_binary -> expr OR expr .)
    WHERE           reduce using rule 55 (expr_binary -> expr OR expr .)
    GROUP_BY        reduce using rule 55 (expr_binary -> expr OR expr .)
    HAVING          reduce using rule 55 (expr_binary -> expr OR expr .)
    ORDER_BY        reduce using rule 55 (expr_binary -> expr OR expr .)
    $end            reduce using rule 55 (expr_binary -> expr OR expr .)
    ON              reduce using rule 55 (expr_binary -> expr OR expr .)
    USING           reduce using rule 55 (expr_binary -> expr OR expr .)
    SET_OPERATOR    reduce using rule 55 (expr_binary -> expr OR expr .)
    AND             reduce using rule 55 (expr_binary -> expr OR expr .)
    OR              reduce using rule 55 (expr_binary -> expr OR expr .)
    AS              reduce using rule 55 (expr_binary -> expr OR expr .)
    ASC             reduce using rule 55 (expr_binary -> expr OR expr .)
    DESC            reduce using rule 55 (expr_binary -> expr OR expr .)
    BETWEEN         reduce using rule 55 (expr_binary -> expr OR expr .)
    CAST            reduce using rule 55 (expr_binary -> expr OR expr .)
    PARENT_R        reduce using rule 55 (expr_binary -> expr OR expr .)
    END             reduce using rule 55 (expr_binary -> expr OR expr .)
    WHEN            reduce using rule 55 (expr_binary -> expr OR expr .)
    THEN            reduce using rule 55 (expr_binary -> expr OR expr .)
    ELSE            reduce using rule 55 (expr_binary -> expr OR expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    STAR            shift and go to state 81
    IDENTIFIER      shift and go to state 36

  ! OPERATOR        [ reduce using rule 55 (expr_binary -> expr OR expr .) ]
  ! PLUS_MINUS      [ reduce using rule 55 (expr_binary -> expr OR expr .) ]
  ! STAR            [ reduce using rule 55 (expr_binary -> expr OR expr .) ]
  ! IDENTIFIER      [ reduce using rule 55 (expr_binary -> expr OR expr .) ]
  ! SET_OPERATOR    [ shift and go to state 84 ]
  ! AND             [ shift and go to state 79 ]
  ! OR              [ shift and go to state 91 ]
  ! AS              [ shift and go to state 87 ]
  ! ASC             [ shift and go to state 86 ]
  ! DESC            [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 88 ]
  ! CAST            [ shift and go to state 35 ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 119

    (49) expr_comma -> expr_comma COMMA expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

  ! shift/reduce conflict for OPERATOR resolved as shift
  ! shift/reduce conflict for PLUS_MINUS resolved as shift
  ! shift/reduce conflict for SET_OPERATOR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for ASC resolved as shift
  ! shift/reduce conflict for DESC resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
    COMMA           reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    WITH            reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    SELECT          reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    FROM            reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    JOIN_OPERATOR   reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    WHERE           reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    GROUP_BY        reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    HAVING          reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    ORDER_BY        reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    $end            reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    ON              reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    USING           reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    PARENT_R        reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    END             reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    WHEN            reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    THEN            reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    ELSE            reduce using rule 49 (expr_comma -> expr_comma COMMA expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

  ! OPERATOR        [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! PLUS_MINUS      [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! SET_OPERATOR    [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! AND             [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! OR              [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! STAR            [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! AS              [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! ASC             [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! DESC            [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! BETWEEN         [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! IDENTIFIER      [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]
  ! CAST            [ reduce using rule 49 (expr_comma -> expr_comma COMMA expr .) ]

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 120

    (40) expr_conditions -> expr_conditions THEN expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    END             reduce using rule 40 (expr_conditions -> expr_conditions THEN expr .)
    WHEN            reduce using rule 40 (expr_conditions -> expr_conditions THEN expr .)
    THEN            reduce using rule 40 (expr_conditions -> expr_conditions THEN expr .)
    ELSE            reduce using rule 40 (expr_conditions -> expr_conditions THEN expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 121

    (39) expr_conditions -> expr_conditions WHEN expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    END             reduce using rule 39 (expr_conditions -> expr_conditions WHEN expr .)
    WHEN            reduce using rule 39 (expr_conditions -> expr_conditions WHEN expr .)
    THEN            reduce using rule 39 (expr_conditions -> expr_conditions WHEN expr .)
    ELSE            reduce using rule 39 (expr_conditions -> expr_conditions WHEN expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82

state 122

    (41) expr_conditions -> expr_conditions ELSE expr .
    (51) expr_binary -> expr . OPERATOR expr
    (52) expr_binary -> expr . PLUS_MINUS expr
    (53) expr_binary -> expr . SET_OPERATOR expr
    (54) expr_binary -> expr . AND expr
    (55) expr_binary -> expr . OR expr
    (56) expr_binary -> expr . STAR expr
    (34) expr_alias -> expr . expr_identifier
    (35) expr_alias -> expr . expr_function
    (36) expr_as -> expr . AS expr
    (37) expr_as -> expr . AS expr_identifier
    (58) expr_order -> expr . ASC
    (59) expr_order -> expr . DESC
    (57) expr_between -> expr . BETWEEN expr
    (62) expr_identifier -> . expr_identifier DOT IDENTIFIER
    (63) expr_identifier -> . expr_identifier DOT STAR
    (64) expr_identifier -> . IDENTIFIER
    (65) expr_identifier -> . STAR
    (45) expr_function -> . expr_identifier expr_parent
    (46) expr_function -> . CAST expr_parent

    END             reduce using rule 41 (expr_conditions -> expr_conditions ELSE expr .)
    WHEN            reduce using rule 41 (expr_conditions -> expr_conditions ELSE expr .)
    THEN            reduce using rule 41 (expr_conditions -> expr_conditions ELSE expr .)
    ELSE            reduce using rule 41 (expr_conditions -> expr_conditions ELSE expr .)
    OPERATOR        shift and go to state 89
    PLUS_MINUS      shift and go to state 83
    SET_OPERATOR    shift and go to state 84
    AND             shift and go to state 79
    OR              shift and go to state 91
    STAR            shift and go to state 81
    AS              shift and go to state 87
    ASC             shift and go to state 86
    DESC            shift and go to state 92
    BETWEEN         shift and go to state 88
    IDENTIFIER      shift and go to state 36
    CAST            shift and go to state 35

    expr_function                  shift and go to state 85
    expr_identifier                shift and go to state 82
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for WITH in state 30 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 30 resolved as shift
WARNING: shift/reduce conflict for FROM in state 30 resolved as shift
WARNING: shift/reduce conflict for JOIN_OPERATOR in state 30 resolved as shift
WARNING: shift/reduce conflict for WHERE in state 30 resolved as shift
WARNING: shift/reduce conflict for GROUP_BY in state 30 resolved as shift
WARNING: shift/reduce conflict for HAVING in state 30 resolved as shift
WARNING: shift/reduce conflict for ORDER_BY in state 30 resolved as shift
WARNING: shift/reduce conflict for WITH in state 34 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 34 resolved as shift
WARNING: shift/reduce conflict for FROM in state 34 resolved as shift
WARNING: shift/reduce conflict for JOIN_OPERATOR in state 34 resolved as shift
WARNING: shift/reduce conflict for WHERE in state 34 resolved as shift
WARNING: shift/reduce conflict for GROUP_BY in state 34 resolved as shift
WARNING: shift/reduce conflict for HAVING in state 34 resolved as shift
WARNING: shift/reduce conflict for ORDER_BY in state 34 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 52 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS_MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for SET_OPERATOR in state 53 resolved as shift
WARNING: shift/reduce conflict for AND in state 53 resolved as shift
WARNING: shift/reduce conflict for OR in state 53 resolved as shift
WARNING: shift/reduce conflict for STAR in state 53 resolved as shift
WARNING: shift/reduce conflict for AS in state 53 resolved as shift
WARNING: shift/reduce conflict for ASC in state 53 resolved as shift
WARNING: shift/reduce conflict for DESC in state 53 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 53 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 53 resolved as shift
WARNING: shift/reduce conflict for CAST in state 53 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 54 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS_MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for SET_OPERATOR in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for STAR in state 60 resolved as shift
WARNING: shift/reduce conflict for AS in state 60 resolved as shift
WARNING: shift/reduce conflict for ASC in state 60 resolved as shift
WARNING: shift/reduce conflict for DESC in state 60 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 60 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 60 resolved as shift
WARNING: shift/reduce conflict for CAST in state 60 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 63 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 64 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS_MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for SET_OPERATOR in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for STAR in state 65 resolved as shift
WARNING: shift/reduce conflict for AS in state 65 resolved as shift
WARNING: shift/reduce conflict for ASC in state 65 resolved as shift
WARNING: shift/reduce conflict for DESC in state 65 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 65 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 65 resolved as shift
WARNING: shift/reduce conflict for CAST in state 65 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS_MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for SET_OPERATOR in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for STAR in state 73 resolved as shift
WARNING: shift/reduce conflict for AS in state 73 resolved as shift
WARNING: shift/reduce conflict for ASC in state 73 resolved as shift
WARNING: shift/reduce conflict for DESC in state 73 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 73 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 73 resolved as shift
WARNING: shift/reduce conflict for CAST in state 73 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 95 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS_MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for SET_OPERATOR in state 109 resolved as shift
WARNING: shift/reduce conflict for AND in state 109 resolved as shift
WARNING: shift/reduce conflict for OR in state 109 resolved as shift
WARNING: shift/reduce conflict for STAR in state 109 resolved as shift
WARNING: shift/reduce conflict for AS in state 109 resolved as shift
WARNING: shift/reduce conflict for ASC in state 109 resolved as shift
WARNING: shift/reduce conflict for DESC in state 109 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 109 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 109 resolved as shift
WARNING: shift/reduce conflict for CAST in state 109 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 112 resolved as shift
WARNING: shift/reduce conflict for PLUS_MINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for SET_OPERATOR in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for STAR in state 112 resolved as shift
WARNING: shift/reduce conflict for AS in state 112 resolved as shift
WARNING: shift/reduce conflict for ASC in state 112 resolved as shift
WARNING: shift/reduce conflict for DESC in state 112 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 112 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 112 resolved as shift
WARNING: shift/reduce conflict for CAST in state 112 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS_MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for SET_OPERATOR in state 115 resolved as shift
WARNING: shift/reduce conflict for AND in state 115 resolved as shift
WARNING: shift/reduce conflict for OR in state 115 resolved as shift
WARNING: shift/reduce conflict for STAR in state 115 resolved as shift
WARNING: shift/reduce conflict for AS in state 115 resolved as shift
WARNING: shift/reduce conflict for ASC in state 115 resolved as shift
WARNING: shift/reduce conflict for DESC in state 115 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 115 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 115 resolved as shift
WARNING: shift/reduce conflict for CAST in state 115 resolved as shift
WARNING: shift/reduce conflict for OPERATOR in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS_MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for SET_OPERATOR in state 119 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 119 resolved as shift
WARNING: shift/reduce conflict for STAR in state 119 resolved as shift
WARNING: shift/reduce conflict for AS in state 119 resolved as shift
WARNING: shift/reduce conflict for ASC in state 119 resolved as shift
WARNING: shift/reduce conflict for DESC in state 119 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 119 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 119 resolved as shift
WARNING: shift/reduce conflict for CAST in state 119 resolved as shift
WARNING: reduce/reduce conflict in state 113 resolved using rule (expr_as -> expr AS expr_identifier)
WARNING: rejected rule (expr -> expr_identifier) in state 113
